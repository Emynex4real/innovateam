{"version":3,"file":"static/js/941.d3270ee0.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","pages/support/index.jsx"],"sourcesContent":["import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                // clean up the exiting children map\n                exitingChildren.delete(key);\n                // compute the keys of children that were rendered once but are no longer present\n                // this could happen in case of too many fast consequent renderings\n                // @link https://github.com/framer/motion/issues/2023\n                const leftOverKeys = Array.from(allChildren.keys()).filter((childKey) => !targetKeys.includes(childKey));\n                // clean up the all children map\n                leftOverKeys.forEach((leftOverKey) => allChildren.delete(leftOverKey));\n                // make sure to render only the children that are actually visible\n                presentChildren.current = filteredChildren.filter((presentChild) => {\n                    const presentChildKey = getChildKey(presentChild);\n                    return (\n                    // filter out the node exiting\n                    presentChildKey === key ||\n                        // filter out the leftover children\n                        leftOverKeys.includes(presentChildKey));\n                });\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exitingChildren.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import React, { useState } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { FaMapMarkerAlt, FaEnvelope, FaPhone, FaLink, FaArrowRight, FaSpinner } from 'react-icons/fa';\r\nimport toast from 'react-hot-toast';\r\nimport { useDarkMode } from '../../contexts/DarkModeContext';\r\n\r\nconst Support = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    subject: '',\r\n    message: '',\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [selectedCategory, setSelectedCategory] = useState('general');\r\n  const [faqExpanded, setFaqExpanded] = useState(null);\r\n  const { isDarkMode } = useDarkMode();\r\n\r\n  const supportCategories = [\r\n    { id: 'general', label: 'General Support' },\r\n    { id: 'technical', label: 'Technical Issues' },\r\n    { id: 'billing', label: 'Billing & Payments' },\r\n    { id: 'feature', label: 'Feature Request' },\r\n  ];\r\n\r\n  const faqs = [\r\n    {\r\n      question: 'How do I reset my password?',\r\n      answer: 'You can reset your password by clicking on the \"Forgot Password\" link on the login page. Follow the instructions sent to your email to create a new password.'\r\n    },\r\n    {\r\n      question: 'What payment methods do you accept?',\r\n      answer: 'We accept various payment methods including credit/debit cards, bank transfers, and mobile money. All transactions are secured and encrypted.'\r\n    },\r\n    {\r\n      question: 'How can I track my transaction history?',\r\n      answer: 'You can view your complete transaction history in the Transactions page of your dashboard. Filter and search options are available for easy tracking.'\r\n    },\r\n  ];\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n    if (errors[name]) setErrors((prev) => ({ ...prev, [name]: '' }));\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    if (!formData.name.trim()) newErrors.name = 'Name is required';\r\n    if (!formData.email.trim()) newErrors.email = 'Email is required';\r\n    else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) newErrors.email = 'Invalid email format';\r\n    if (!formData.subject.trim()) newErrors.subject = 'Subject is required';\r\n    if (!formData.message.trim()) newErrors.message = 'Message is required';\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) return;\r\n\r\n    setIsSubmitting(true);\r\n    try {\r\n      // Simulate API call\r\n      await new Promise((resolve) => setTimeout(resolve, 1500));\r\n      console.log('Form submitted:', formData);\r\n      toast.success('Message sent successfully!');\r\n      setFormData({ name: '', email: '', subject: '', message: '' });\r\n    } catch (error) {\r\n      toast.error('Failed to send message. Please try again.');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  // Animation variants\r\n  const containerVariants = {\r\n    hidden: { opacity: 0, y: 20 },\r\n    visible: { opacity: 1, y: 0, transition: { duration: 0.5 } },\r\n  };\r\n\r\n  return (\r\n    <div className={`min-h-screen p-4 font-nunito transition-colors duration-200 ${\r\n      isDarkMode ? 'bg-dark-surface text-dark-text-primary' : 'bg-gray-50'\r\n    }`}>\r\n      <div className=\"max-w-7xl mx-auto space-y-8\">\r\n\r\n        {/* Hero Section */}\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className={`text-center mb-12 p-8 rounded-xl shadow-lg ${\r\n            isDarkMode ? 'bg-dark-surface-secondary border border-dark-border' : 'bg-white'\r\n          }`}\r\n        >\r\n          <h1 className={`text-3xl md:text-4xl font-bold mb-4 ${\r\n            isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\r\n          }`}>How Can We Help You?</h1>\r\n          <p className={`max-w-2xl mx-auto mb-8 ${\r\n            isDarkMode ? 'text-dark-text-secondary' : 'text-gray-600'\r\n          }`}>Choose a category below or search for specific help. Our support team is here to assist you 24/7.</p>\r\n\r\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n            {supportCategories.map((category) => (\r\n              <button\r\n                key={category.id}\r\n                onClick={() => setSelectedCategory(category.id)}\r\n                className={`p-4 rounded-lg transition-all duration-200 ${\r\n                  selectedCategory === category.id\r\n                    ? isDarkMode\r\n                      ? 'bg-green-600 text-white shadow-lg scale-105'\r\n                      : 'bg-primary-color text-white shadow-lg scale-105'\r\n                    : isDarkMode\r\n                      ? 'bg-dark-surface text-dark-text-secondary hover:bg-dark-border'\r\n                      : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\r\n                }`}\r\n              >\r\n                {category.label}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </motion.div>\r\n\r\n        {/* FAQ Section */}\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          className={`mb-12 p-8 rounded-xl shadow-lg ${\r\n            isDarkMode ? 'bg-dark-surface-secondary border border-dark-border' : 'bg-white'\r\n          }`}\r\n        >\r\n          <h2 className={`text-2xl font-bold mb-6 ${\r\n            isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\r\n          }`}>Frequently Asked Questions</h2>\r\n          <div className=\"space-y-4\">\r\n            {faqs.map((faq, index) => (\r\n              <motion.div\r\n                key={index}\r\n                className={`border rounded-lg overflow-hidden ${\r\n                  isDarkMode ? 'border-dark-border' : 'border-gray-200'\r\n                }`}\r\n                initial={false}\r\n              >\r\n                <button\r\n                  className={`w-full p-4 text-left flex justify-between items-center transition-colors duration-200 ${\r\n                    isDarkMode \r\n                      ? 'bg-dark-surface hover:bg-dark-border' \r\n                      : 'bg-gray-50 hover:bg-gray-100'\r\n                  }`}\r\n                  onClick={() => setFaqExpanded(faqExpanded === index ? null : index)}\r\n                >\r\n                  <span className={`font-medium ${\r\n                    isDarkMode ? 'text-dark-text-primary' : 'text-gray-700'\r\n                  }`}>{faq.question}</span>\r\n                  <FaArrowRight\r\n                    className={`transform transition-transform duration-200 ${\r\n                      faqExpanded === index ? 'rotate-90' : ''\r\n                    } ${\r\n                      isDarkMode ? 'text-dark-text-secondary' : 'text-gray-500'\r\n                    }`}\r\n                  />\r\n                </button>\r\n                <AnimatePresence>\r\n                  {faqExpanded === index && (\r\n                    <motion.div\r\n                      initial={{ height: 0, opacity: 0 }}\r\n                      animate={{ height: 'auto', opacity: 1 }}\r\n                      exit={{ height: 0, opacity: 0 }}\r\n                      transition={{ duration: 0.2 }}\r\n                      className={`border-t ${\r\n                        isDarkMode ? 'border-dark-border' : 'border-gray-200'\r\n                      }`}\r\n                    >\r\n                      <div className={`p-4 ${\r\n                        isDarkMode ? 'bg-dark-surface text-dark-text-secondary' : 'bg-white text-gray-600'\r\n                      }`}>\r\n                        {faq.answer}\r\n                      </div>\r\n                    </motion.div>\r\n                  )}\r\n                </AnimatePresence>\r\n              </motion.div>\r\n            ))}\r\n          </div>\r\n        </motion.div>\r\n\r\n        {/* Contact Form Section */}\r\n        <motion.div\r\n          variants={containerVariants}\r\n          initial=\"hidden\"\r\n          animate=\"visible\"\r\n          className={`rounded-xl shadow-lg w-full flex flex-col lg:flex-row overflow-hidden ${\r\n            isDarkMode ? 'bg-dark-surface-secondary' : 'bg-white'\r\n          }`}\r\n        >\r\n          {/* Contact Information */}\r\n          <div className=\"bg-gradient-to-br from-primary-color to-green-600 text-white p-8 lg:w-1/3 flex flex-col gap-8\">\r\n            <h2 className=\"text-2xl font-bold\">Get in Touch</h2>\r\n            <p className=\"text-green-100\">Our support team is available 24/7 to help you with any questions or concerns.</p>\r\n\r\n            <div className=\"space-y-6\">\r\n              <div className=\"flex items-center space-x-4 bg-green-700/30 p-4 rounded-lg hover:bg-green-700/40 transition-colors duration-200\">\r\n                <div className=\"bg-white/10 p-3 rounded-full\">\r\n                  <FaMapMarkerAlt size={20} />\r\n                </div>\r\n                <div>\r\n                  <h3 className=\"font-medium\">Visit Us</h3>\r\n                  <p className=\"text-sm text-green-100\">06, Opposite GGSS Bakori, Dutsen Rimt, Katsina.</p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex items-center space-x-4 bg-green-700/30 p-4 rounded-lg hover:bg-green-700/40 transition-colors duration-200\">\r\n                <div className=\"bg-white/10 p-3 rounded-full\">\r\n                  <FaEnvelope size={20} />\r\n                </div>\r\n                <div>\r\n                  <h3 className=\"font-medium\">Email Us</h3>\r\n                  <a href=\"mailto:info@arewagate.com\" className=\"text-sm text-green-100 hover:text-white transition-colors duration-200\">info@arewagate.com</a>\r\n                  <a href=\"mailto:arewagatecafe@gmail.com\" className=\"block text-sm text-green-100 hover:text-white transition-colors duration-200\">arewagatecafe@gmail.com</a>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex items-center space-x-4 bg-green-700/30 p-4 rounded-lg hover:bg-green-700/40 transition-colors duration-200\">\r\n                <div className=\"bg-white/10 p-3 rounded-full\">\r\n                  <FaPhone size={20} />\r\n                </div>\r\n                <div>\r\n                  <h3 className=\"font-medium\">Call Us</h3>\r\n                  <a href=\"tel:+2347038374534\" className=\"text-sm text-green-100 hover:text-white transition-colors duration-200\">+234 703 837 4534</a>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex items-center space-x-4 bg-green-700/30 p-4 rounded-lg hover:bg-green-700/40 transition-colors duration-200\">\r\n                <div className=\"bg-white/10 p-3 rounded-full\">\r\n                  <FaLink size={20} />\r\n                </div>\r\n                <div>\r\n                  <h3 className=\"font-medium\">Quick Links</h3>\r\n                  <a href=\"https://chat.whatsapp.com/arewagate\" className=\"block text-sm text-green-100 hover:text-white transition-colors duration-200\">Join Support Group</a>\r\n                  <a href=\"https://support.arewagate.com/chat\" className=\"block text-sm text-green-100 hover:text-white transition-colors duration-200\">Live Chat Support</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Contact Form */}\r\n          <div className={`p-8 lg:w-2/3 ${\r\n            isDarkMode ? 'bg-dark-surface' : 'bg-white'\r\n          }`}>\r\n            <h2 className={`text-2xl font-bold mb-4 ${\r\n              isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\r\n            }`}>Send Us a Message</h2>\r\n            <p className={`mb-6 ${\r\n              isDarkMode ? 'text-dark-text-secondary' : 'text-gray-600'\r\n            }`}>Fill out the form below and we'll get back to you as soon as possible.</p>\r\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n              {[\r\n                { label: 'Your Name', name: 'name', type: 'text', placeholder: 'Full Name' },\r\n                { label: 'Your Email', name: 'email', type: 'email', placeholder: 'Email address' },\r\n                { label: 'Subject', name: 'subject', type: 'text', placeholder: 'Subject' },\r\n              ].map((field) => (\r\n                <div key={field.name}>\r\n                  <label className={`block text-sm font-medium mb-1 ${\r\n                    isDarkMode ? 'text-dark-text-primary' : 'text-gray-700'\r\n                  }`} htmlFor={field.name}>\r\n                    {field.label}\r\n                  </label>\r\n                  <input\r\n                    id={field.name}\r\n                    type={field.type}\r\n                    name={field.name}\r\n                    value={formData[field.name]}\r\n                    onChange={handleChange}\r\n                    className={`w-full p-4 border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-color transition-all duration-200 ${\r\n                      errors[field.name]\r\n                        ? 'border-red-500'\r\n                        : isDarkMode\r\n                          ? 'border-dark-border bg-dark-surface text-dark-text-primary'\r\n                          : 'border-gray-300 bg-gray-50'\r\n                    }`}\r\n                    placeholder={field.placeholder}\r\n                    required\r\n                    disabled={isSubmitting}\r\n                  />\r\n                  {errors[field.name] && <p className=\"text-red-500 text-xs mt-1\">{errors[field.name]}</p>}\r\n                </div>\r\n              ))}\r\n\r\n              <div>\r\n                <label className={`block text-sm font-medium mb-1 ${\r\n                  isDarkMode ? 'text-dark-text-primary' : 'text-gray-700'\r\n                }`} htmlFor=\"message\">\r\n                  Message\r\n                </label>\r\n                <textarea\r\n                  id=\"message\"\r\n                  name=\"message\"\r\n                  value={formData.message}\r\n                  onChange={handleChange}\r\n                  className={`w-full p-4 border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-color transition-all duration-200 ${\r\n                    errors.message\r\n                      ? 'border-red-500'\r\n                      : isDarkMode\r\n                        ? 'border-dark-border bg-dark-surface text-dark-text-primary'\r\n                        : 'border-gray-300 bg-gray-50'\r\n                  }`}\r\n                  rows={4}\r\n                  placeholder=\"Your message\"\r\n                  required\r\n                  disabled={isSubmitting}\r\n                />\r\n                {errors.message && <p className=\"text-red-500 text-xs mt-1\">{errors.message}</p>}\r\n              </div>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                disabled={isSubmitting}\r\n                className={`w-full py-3 px-6 rounded-lg font-semibold flex items-center justify-center gap-2 transition-colors duration-200 ${\r\n                  isDarkMode\r\n                    ? 'bg-green-600 hover:bg-green-700 text-white'\r\n                    : 'bg-primary-color hover:bg-primary-color-dark text-white'\r\n                } disabled:opacity-50 disabled:cursor-not-allowed`}\r\n              >\r\n                {isSubmitting ? (\r\n                  <>\r\n                    <FaSpinner className=\"animate-spin\" />\r\n                    Sending...\r\n                  </>\r\n                ) : (\r\n                  'Send Message'\r\n                )}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </motion.div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Support;"],"names":["useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","React","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","children","PopChild","_ref","id","useId","ref","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","concat","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","isComplete","values","register","delete","undefined","forEach","_","key","PresenceContext","Provider","value","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","invariant","forceRender","useContext","LayoutGroupContext","forcedRenderCount","setForcedRenderCount","useState","useCallback","frame","postRender","useForceUpdate","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exitingChildren","presentChildren","allChildren","isInitialRender","callback","updateChildLookup","clear","useEffect","map","presentKeys","targetKeys","numPresent","length","i","indexOf","has","component","get","insertionIndex","exitingComponent","onExit","leftOverKeys","Array","from","keys","filter","childKey","includes","leftOverKey","presentChild","presentChildKey","splice","cloneElement","Support","formData","setFormData","name","email","subject","message","errors","setErrors","isSubmitting","setIsSubmitting","selectedCategory","setSelectedCategory","faqExpanded","setFaqExpanded","isDarkMode","useDarkMode","handleChange","e","target","prev","_objectSpread","_jsx","className","_jsxs","motion","div","opacity","y","animate","label","category","onClick","question","answer","faq","index","FaArrowRight","exit","transition","duration","variants","hidden","visible","FaMapMarkerAlt","FaEnvelope","href","FaPhone","FaLink","onSubmit","async","preventDefault","validateForm","newErrors","trim","test","Object","Promise","resolve","setTimeout","console","log","toast","success","error","type","placeholder","field","htmlFor","onChange","required","disabled","rows","_Fragment","FaSpinner"],"sourceRoot":""}