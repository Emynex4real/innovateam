{"version":3,"file":"static/js/436.69847e3f.chunk.js","mappings":"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","sources":["../node_modules/@heroicons/react/24/outline/esm/WalletIcon.js","../node_modules/@heroicons/react/24/outline/esm/KeyIcon.js","../node_modules/@heroicons/react/24/outline/esm/ShoppingCartIcon.js","pages/jamb services/pin vending/index.jsx","../node_modules/@heroicons/react/24/outline/esm/ArrowPathIcon.js","hooks/useJambTransaction.js"],"sourcesContent":["import * as React from \"react\";\nfunction WalletIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M21 12a2.25 2.25 0 0 0-2.25-2.25H15a3 3 0 1 1-6 0H5.25A2.25 2.25 0 0 0 3 12m18 0v6a2.25 2.25 0 0 1-2.25 2.25H5.25A2.25 2.25 0 0 1 3 18v-6m18 0V9M3 12V9m18 0a2.25 2.25 0 0 0-2.25-2.25H5.25A2.25 2.25 0 0 0 3 9m18 0V6a2.25 2.25 0 0 0-2.25-2.25H5.25A2.25 2.25 0 0 0 3 6v3\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(WalletIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction KeyIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15.75 5.25a3 3 0 0 1 3 3m3 0a6 6 0 0 1-7.029 5.912c-.563-.097-1.159.026-1.563.43L10.5 17.25H8.25v2.25H6v2.25H2.25v-2.818c0-.597.237-1.17.659-1.591l6.499-6.499c.404-.404.527-1 .43-1.563A6 6 0 1 1 21.75 8.25Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(KeyIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ShoppingCartIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M2.25 3h1.386c.51 0 .955.343 1.087.835l.383 1.437M7.5 14.25a3 3 0 0 0-3 3h15.75m-12.75-3h11.218c1.121-2.3 2.1-4.684 2.924-7.138a60.114 60.114 0 0 0-16.536-1.84M7.5 14.25 5.106 5.272M6 20.25a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Zm12.75 0a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ShoppingCartIcon);\nexport default ForwardRef;","import React, { useState } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { KeyIcon, WalletIcon, ArrowPathIcon, ShoppingCartIcon } from '@heroicons/react/24/outline';\r\nimport { useJambTransaction } from '../../../hooks/useJambTransaction';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useDarkMode } from '../../../contexts/DarkModeContext';\r\n\r\nconst JambPinVending = () => {\r\n  const [type, setType] = useState('');\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [amount, setAmount] = useState(0); // Default amount is 0 until a type is selected\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { processJambTransaction, walletBalance } = useJambTransaction();\r\n  const { isDarkMode } = useDarkMode();\r\n\r\n  const handleTypeChange = (e) => {\r\n    const selectedType = e.target.value;\r\n    setType(selectedType);\r\n    // Update amount based on the selected type and quantity\r\n    if (selectedType === \"7150\") {\r\n      setAmount(quantity * 7150);\r\n    } else if (selectedType === \"8650\") {\r\n      setAmount(quantity * 8650);\r\n    } else {\r\n      setAmount(0); // Reset amount if no type is selected\r\n    }\r\n  };\r\n\r\n  const handleQuantityChange = (e) => {\r\n    const newQuantity = parseInt(e.target.value, 10);\r\n    setQuantity(newQuantity);\r\n    // Update amount based on the selected type and new quantity\r\n    if (type === \"7150\") {\r\n      setAmount(newQuantity * 7150);\r\n    } else if (type === \"8650\") {\r\n      setAmount(newQuantity * 8650);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!type) {\r\n      toast.error('Please select a type');\r\n      return;\r\n    }\r\n\r\n    if (amount > walletBalance) {\r\n      toast.error('Insufficient wallet balance!', {\r\n        description: `Required: ₦${amount.toLocaleString()}, Balance: ₦${walletBalance.toLocaleString()}`,\r\n        duration: 5000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      const result = await processJambTransaction({\r\n        amount: amount,\r\n        serviceType: 'JAMB Pin',\r\n        description: `${type === '7150' ? 'UTME ONLY' : 'UTME WITH MOCK'} Pin`,\r\n        quantity: quantity,\r\n      });\r\n\r\n      if (result.success) {\r\n        toast.success('Transaction successful!', {\r\n          description: `Amount: ₦${amount.toLocaleString()}, Type: ${type === '7150' ? 'UTME ONLY' : 'UTME WITH MOCK'}, Quantity: ${quantity}`,\r\n          duration: 5000,\r\n        });\r\n        // Reset form\r\n        setType('');\r\n        setQuantity(1);\r\n        setAmount(0);\r\n      }\r\n    } catch (error) {\r\n      toast.error('Transaction failed', {\r\n        description: 'Please try again or contact support if the issue persists.',\r\n        duration: 5000,\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`min-h-screen py-6 font-nunito transition-colors duration-200 ${\r\n      isDarkMode ? 'bg-dark-surface text-dark-text-primary' : 'bg-gray-50'\r\n    }`}>\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme={isDarkMode ? \"dark\" : \"light\"}\r\n      />\r\n      <div className=\"container mx-auto px-4\">\r\n        <div className=\"flex items-center gap-4 mb-8\">\r\n          <div className={`p-3 ${\r\n            isDarkMode ? 'bg-green-900/30' : 'bg-green-100'\r\n          } rounded-full`}>\r\n            <KeyIcon className={`w-6 h-6 ${\r\n              isDarkMode ? 'text-green-400' : 'text-green-600'\r\n            }`} />\r\n          </div>\r\n          <h1 className={`text-2xl md:text-3xl font-bold ${\r\n            isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\r\n          }`}>JAMB Pin Vending</h1>\r\n        </div>\r\n\r\n        <div className=\"flex flex-col md:flex-row gap-6\">\r\n          {/* JAMB PIN Vending Form */}\r\n          <div className={`flex-1 ${\r\n            isDarkMode ? 'bg-dark-surface-secondary border-dark-border' : 'bg-white'\r\n          } p-6 rounded-xl shadow-md border`}>\r\n            <div className=\"flex items-center gap-3 mb-6\">\r\n              <ShoppingCartIcon className={`w-6 h-6 ${\r\n                isDarkMode ? 'text-green-400' : 'text-green-600'\r\n              }`} />\r\n              <h2 className={`text-lg font-bold ${\r\n                isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\r\n              }`}>Pin Details</h2>\r\n            </div>\r\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n              <div className=\"mb-4\">\r\n                <label className={`block text-sm font-medium mb-1 ${\r\n                  isDarkMode ? 'text-dark-text-primary' : 'text-gray-700'\r\n                }`}>Type</label>\r\n                <select\r\n                  value={type}\r\n                  onChange={handleTypeChange}\r\n                  className={`mt-1 block w-full p-2 border rounded-md focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200 ${\r\n                    isDarkMode \r\n                      ? 'bg-dark-surface border-dark-border text-dark-text-primary' \r\n                      : 'border-gray-300'\r\n                  }`}\r\n                >\r\n                  <option value=\"\">Select Type</option>\r\n                  <option value=\"7150\">UTME ONLY (₦7,150)</option>\r\n                  <option value=\"8650\">UTME WITH MOCK (₦8,650)</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"mb-4\">\r\n                <label className={`block text-sm font-medium mb-1 ${\r\n                  isDarkMode ? 'text-dark-text-primary' : 'text-gray-700'\r\n                }`}>Quantity</label>\r\n                <select\r\n                  value={quantity}\r\n                  onChange={handleQuantityChange}\r\n                  className={`mt-1 block w-full p-2 border rounded-md focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200 ${\r\n                    isDarkMode \r\n                      ? 'bg-dark-surface border-dark-border text-dark-text-primary' \r\n                      : 'border-gray-300'\r\n                  }`}\r\n                >\r\n                  <option value=\"1\">1</option>\r\n                  <option value=\"2\">2</option>\r\n                  <option value=\"3\">3</option>\r\n                  <option value=\"4\">4</option>\r\n                  <option value=\"5\">5</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label className={`block text-sm font-semibold mb-1 ${\r\n                  isDarkMode ? 'text-dark-text-primary' : 'text-gray-700'\r\n                }`}>Amount</label>\r\n                <div className=\"relative\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={`₦${amount}`}\r\n                    readOnly\r\n                    className={`w-full pl-12 pr-4 py-3 border rounded-xl cursor-not-allowed ${\r\n                      isDarkMode \r\n                        ? 'bg-dark-surface border-dark-border text-dark-text-primary' \r\n                        : 'bg-gray-100 border-gray-300 text-gray-700'\r\n                    }`}\r\n                  />\r\n                  <div className=\"absolute left-4 top-1/2 -translate-y-1/2\">\r\n                    <WalletIcon className={`w-5 h-5 ${\r\n                      isDarkMode ? 'text-dark-text-secondary' : 'text-gray-400'\r\n                    }`} />\r\n                  </div>\r\n                </div>\r\n                <p className={`mt-2 text-sm ${\r\n                  isDarkMode ? 'text-dark-text-secondary' : 'text-gray-500'\r\n                }`}>\r\n                  Wallet Balance: <span className={`font-medium ${\r\n                    isDarkMode ? 'text-dark-text-primary' : 'text-gray-700'\r\n                  }`}>₦{walletBalance.toLocaleString()}</span>\r\n                </p>\r\n              </div>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                disabled={isLoading || !type}\r\n                className={`w-full py-3 px-6 rounded-xl font-semibold transition-all duration-300 flex items-center justify-center gap-2 ${\r\n                  isDarkMode\r\n                    ? 'bg-green-600 hover:bg-green-700 text-white'\r\n                    : 'bg-green-500 hover:bg-green-600 text-white'\r\n                } disabled:opacity-50 disabled:cursor-not-allowed`}\r\n              >\r\n                {isLoading ? (\r\n                  <>\r\n                    <ArrowPathIcon className=\"w-5 h-5 animate-spin\" />\r\n                    Processing...\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <ShoppingCartIcon className=\"w-5 h-5\" />\r\n                    Proceed\r\n                  </>\r\n                )}\r\n              </button>\r\n            </form>\r\n          </div>\r\n\r\n          {/* How It Works Section */}\r\n          <div className={`flex-1 ${\r\n            isDarkMode ? 'bg-dark-surface-secondary border-dark-border' : 'bg-white'\r\n          } p-6 rounded-xl shadow-md border`}>\r\n            <div className=\"flex items-center gap-3 mb-6\">\r\n              <KeyIcon className={`w-6 h-6 ${\r\n                isDarkMode ? 'text-green-400' : 'text-green-600'\r\n              }`} />\r\n              <h2 className={`text-lg font-bold ${\r\n                isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\r\n              }`}>How It Works</h2>\r\n            </div>\r\n            <ul className={`list-disc list-inside ${\r\n              isDarkMode ? 'text-dark-text-secondary' : 'text-gray-600'\r\n            }`}>\r\n              <li>Fill the form with your accurate details and submit</li>\r\n              <li>Click the \"Proceed\" button to make payment for the service</li>\r\n              <li>Upon successful payment, scroll down for new entry. Click on new entry to submit fresh job.</li>\r\n              <li>Once your Job is done, you will be sent a confirmation email and you will be able to print out your processed job.</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        {/* JAMB PIN Vending History */}\r\n        <div className=\"mt-8\">\r\n          <h2 className={`text-xl font-bold mb-4 ${\r\n            isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\r\n          }`}>JAMB PIN VENDING HISTORY</h2>\r\n          <div className={`${\r\n            isDarkMode ? 'bg-dark-surface-secondary border-dark-border' : 'bg-white'\r\n          } p-6 rounded-lg shadow-md overflow-x-auto border`}>\r\n            <table className=\"min-w-full\">\r\n              <thead>\r\n                <tr>\r\n                  <th className={`px-4 py-2 ${\r\n                    isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\r\n                  }`}>Action</th>\r\n                  <th className={`px-4 py-2 ${\r\n                    isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\r\n                  }`}>Type</th>\r\n                  <th className={`px-4 py-2 ${\r\n                    isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\r\n                  }`}>Fullname</th>\r\n                  <th className={`px-4 py-2 ${\r\n                    isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\r\n                  }`}>Profile Code/RegNo.</th>\r\n                  <th className={`px-4 py-2 ${\r\n                    isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\r\n                  }`}>Status</th>\r\n                  <th className={`px-4 py-2 ${\r\n                    isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\r\n                  }`}>Screenshot</th>\r\n                  <th className={`px-4 py-2 ${\r\n                    isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\r\n                  }`}>Remark</th>\r\n                  <th className={`px-4 py-2 ${\r\n                    isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\r\n                  }`}>Submitted On</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td colSpan=\"8\" className={`text-center py-4 ${\r\n                    isDarkMode ? 'text-dark-text-secondary' : 'text-gray-500'\r\n                  }`}>No Record Found!</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JambPinVending;","import * as React from \"react\";\nfunction ArrowPathIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0 3.181 3.183a8.25 8.25 0 0 0 13.803-3.7M4.031 9.865a8.25 8.25 0 0 1 13.803-3.7l3.181 3.182m0-4.991v4.99\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowPathIcon);\nexport default ForwardRef;","import { useTransactions } from '../contexts/TransactionContext';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const useJambTransaction = () => {\r\n  const { addTransaction, walletBalance } = useTransactions();\r\n\r\n  const processJambTransaction = async (params) => {\r\n    const {\r\n      amount,\r\n      serviceType,\r\n      description,\r\n      quantity = 1,\r\n      profileCode = null,\r\n      fullName = null,\r\n    } = params;\r\n\r\n    if (!amount || !serviceType) {\r\n      toast.error('Invalid transaction parameters');\r\n      return { success: false, error: 'Invalid parameters' };\r\n    }\r\n\r\n    if (walletBalance < amount) {\r\n      toast.error('Insufficient wallet balance');\r\n      return { success: false, error: 'Insufficient balance' };\r\n    }\r\n\r\n    try {\r\n      // Process the transaction\r\n      addTransaction({\r\n        label: `JAMB ${serviceType}`,\r\n        description: description || `${serviceType} - ${quantity} unit(s)${profileCode ? ` - ${profileCode}` : ''}${fullName ? ` for ${fullName}` : ''}`,\r\n        amount: amount,\r\n        type: 'debit',\r\n        category: 'jamb',\r\n        status: 'Successful',\r\n        metadata: {\r\n          serviceType,\r\n          quantity,\r\n          profileCode,\r\n          fullName,\r\n        }\r\n      });\r\n\r\n      toast.success('Transaction successful');\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Transaction failed:', error);\r\n      toast.error('Transaction failed. Please try again.');\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  return { processJambTransaction, walletBalance };\r\n};\r\n"],"names":["WalletIcon","_ref","svgRef","title","titleId","props","_objectWithoutProperties","_excluded","React","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","KeyIcon","ShoppingCartIcon","JambPinVending","type","setType","useState","quantity","setQuantity","amount","setAmount","isLoading","setIsLoading","processJambTransaction","walletBalance","useJambTransaction","isDarkMode","useDarkMode","_jsxs","className","concat","children","_jsx","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","onSubmit","async","e","preventDefault","toast","error","description","toLocaleString","duration","serviceType","success","value","onChange","selectedType","target","newQuantity","parseInt","readOnly","disabled","_Fragment","ArrowPathIcon","colSpan","addTransaction","useTransactions","profileCode","fullName","params","label","category","status","metadata","console","message"],"sourceRoot":""}