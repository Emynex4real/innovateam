{"version":3,"file":"static/js/546.11bdaf1e.chunk.js","mappings":"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","sources":["pages/result checker/neco result checker/index.jsx","../node_modules/@heroicons/react/24/outline/esm/CheckIcon.js","../node_modules/@heroicons/react/24/outline/esm/ClipboardIcon.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { ClipboardIcon, CheckIcon } from '@heroicons/react/24/outline';\r\nimport { useTransactions } from '../../../contexts/TransactionContext'; // Assuming the useTransactions hook is in a separate file\r\nimport { useAuth } from '../../../contexts/AuthContext';\r\nimport { useDarkMode } from '../../../contexts/DarkModeContext';\r\n\r\nconst NecoResultChecker = () => {\r\n  const { addTransaction, walletBalance } = useTransactions();\r\n  const { user } = useAuth();\r\n  const { isDarkMode } = useDarkMode();\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [purchasedCards, setPurchasedCards] = useState([\r\n    { id: 1, serial: 'NEC-1234-5678-9101', pin: '987654321', date: '2025-02-20' },\r\n    { id: 2, serial: 'NEC-1121-9101-5678', pin: '123456789', date: '2025-02-19' },\r\n  ]);\r\n  const [isPurchasing, setIsPurchasing] = useState(false);\r\n  const [notification, setNotification] = useState({ visible: false, message: '', type: '' });\r\n  const [copiedCardId, setCopiedCardId] = useState(null);\r\n  const pricePerCard = 1200;\r\n\r\n  const totalAmount = quantity * pricePerCard;\r\n\r\n  const handleQuantityChange = (e) => {\r\n    const selectedQuantity = parseInt(e.target.value, 10);\r\n    setQuantity(selectedQuantity);\r\n  };\r\n\r\n  const generateCard = () => {\r\n    const serial = `NEC-${Math.floor(1000 + Math.random() * 9000)}-${Math.floor(1000 + Math.random() * 9000)}-${Math.floor(1000 + Math.random() * 9000)}`;\r\n    const pin = Math.floor(100000000 + Math.random() * 900000000).toString();\r\n    return { id: Date.now() + Math.random(), serial, pin, date: new Date().toLocaleDateString('en-CA') };\r\n  };\r\n\r\n  const handlePurchase = async () => {\r\n    setIsPurchasing(true);\r\n    setNotification({ visible: false, message: '', type: '' });\r\n\r\n    try {\r\n      // Check if user has enough balance\r\n      if (totalAmount > walletBalance) {\r\n        throw new Error('Insufficient wallet balance');\r\n      }\r\n\r\n      await new Promise((resolve) => setTimeout(resolve, 1000)); // Reduced delay for better UX\r\n      // Process the payment\r\n      addTransaction({\r\n        amount: totalAmount,\r\n        type: 'debit',\r\n        label: 'NECO Result Checker',\r\n        description: `Purchase of ${quantity} NECO Result Checker Card${quantity > 1 ? 's' : ''}`,\r\n        category: 'scratch_card',\r\n        status: 'Successful'\r\n      });\r\n      const newCards = Array.from({ length: quantity }, () => generateCard());\r\n      setPurchasedCards((prev) => [...newCards, ...prev]);\r\n      setNotification({ visible: true, message: `${quantity} NECO card(s) purchased successfully!`, type: 'success' });\r\n      setQuantity(1);\r\n    } catch (error) {\r\n      setNotification({ \r\n        visible: true, \r\n        message: error.message === 'Insufficient wallet balance' \r\n          ? 'Insufficient wallet balance. Please fund your wallet.'\r\n          : 'Purchase failed. Please try again.', \r\n        type: 'error' \r\n      });\r\n    } finally {\r\n      setIsPurchasing(false);\r\n      setTimeout(() => setNotification({ visible: false, message: '', type: '' }), 2500);\r\n    }\r\n  };\r\n\r\n  const copyCardDetails = (card) => {\r\n    const details = `Serial: ${card.serial}\\nPIN: ${card.pin}`;\r\n    navigator.clipboard.writeText(details);\r\n    setCopiedCardId(card.id);\r\n    setTimeout(() => setCopiedCardId(null), 2000);\r\n  };\r\n\r\n  // Animation variants\r\n  const containerVariants = {\r\n    hidden: { opacity: 0 },\r\n    visible: { opacity: 1, transition: { staggerChildren: 0.05 } },\r\n  };\r\n\r\n  const cardVariants = {\r\n    hidden: { opacity: 0, y: 20 },\r\n    visible: { opacity: 1, y: 0, transition: { type: 'spring', stiffness: 100 } },\r\n  };\r\n\r\n  return (\r\n    <div className={`min-h-screen p-6 transition-colors duration-200 ${\r\n      isDarkMode ? 'bg-dark-surface text-dark-text-primary' : 'bg-gray-50 text-gray-800'\r\n    }`}>\r\n      <div className=\"mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.6, ease: 'easeOut' }}\r\n          className=\"mb-10\"\r\n        >\r\n          <div className=\"relative\">\r\n            <h1 className={`text-3xl md:text-4xl font-extrabold tracking-tight mb-2 relative z-10 ${\r\n              isDarkMode ? 'text-white' : 'text-gray-800'\r\n            }`}>NECO Result Checker</h1>\r\n            <p className={`text-lg relative z-10 ${\r\n              isDarkMode ? 'text-gray-300' : 'text-gray-600'\r\n            }`}>Purchase your NECO scratch cards with ease</p>\r\n            <div className=\"absolute -top-6 -left-6 w-24 h-24 bg-green-100 rounded-full filter blur-xl opacity-60\"></div>\r\n            <div className=\"absolute top-10 -right-4 w-16 h-16 bg-green-50 rounded-full filter blur-lg opacity-40\"></div>\r\n          </div>\r\n        </motion.div>\r\n\r\n        {/* Notification */}\r\n        {notification.visible && (\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            exit={{ opacity: 0, y: 20 }}\r\n            className={`fixed bottom-6 right-6 px-6 py-4 rounded-xl shadow-xl backdrop-blur-sm text-white font-medium flex items-center gap-3 ${\r\n              notification.type === 'success' \r\n                ? isDarkMode ? 'bg-green-600/90' : 'bg-green-500' \r\n                : isDarkMode ? 'bg-red-600/90' : 'bg-red-500'\r\n            }`}\r\n          >\r\n            {notification.message}\r\n          </motion.div>\r\n        )}\r\n\r\n        <motion.div variants={containerVariants} initial=\"hidden\" animate=\"visible\" className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n          {/* Purchase Section */}\r\n          <motion.div variants={cardVariants} className={`p-8 rounded-2xl shadow-xl border ${\r\n            isDarkMode ? 'bg-dark-surface-secondary border-dark-border' : 'bg-white border-gray-100'\r\n          }`}>\r\n            <div className={`absolute top-0 right-0 w-40 h-40 rounded-full filter blur-3xl opacity-30 -mr-20 -mt-20 ${\r\n              isDarkMode ? 'bg-green-900/30' : 'bg-green-50'\r\n            }`}></div>\r\n            <h2 className={`text-2xl font-semibold mb-6 ${\r\n              isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\r\n            }`}>Purchase NECO Scratch Cards</h2>\r\n            <div className=\"space-y-6\">\r\n              <div>\r\n                <label htmlFor=\"quantity\" className={`block text-sm font-medium mb-2 ${\r\n                  isDarkMode ? 'text-dark-text-primary' : 'text-gray-700'\r\n                }`}>Select Quantity</label>\r\n                <select\r\n                  id=\"quantity\"\r\n                  value={quantity}\r\n                  onChange={handleQuantityChange}\r\n                  className={`w-full p-4 border rounded-xl focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200 shadow-sm hover:border-gray-300 appearance-none ${\r\n                    isDarkMode \r\n                      ? 'bg-dark-surface border-dark-border text-dark-text-primary hover:border-dark-border-secondary' \r\n                      : 'bg-white border-gray-200 text-gray-800'\r\n                  }`}\r\n                  disabled={isPurchasing}\r\n                >\r\n                  {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((num) => (\r\n                    <option key={num} value={num} className={\r\n                      isDarkMode ? 'bg-dark-surface text-dark-text-primary' : ''\r\n                    }>{num}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"totalAmount\" className={`block text-sm font-medium mb-2 ${\r\n                  isDarkMode ? 'text-dark-text-primary' : 'text-gray-700'\r\n                }`}>Total Amount</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"totalAmount\"\r\n                  value={`₦${totalAmount.toLocaleString()}`}\r\n                  readOnly\r\n                  className={`w-full p-4 border rounded-xl font-medium cursor-not-allowed ${\r\n                    isDarkMode \r\n                      ? 'bg-dark-surface border-dark-border text-dark-text-primary' \r\n                      : 'bg-gradient-to-r from-green-50 to-green-100/30 border-gray-200 text-gray-800'\r\n                  }`}\r\n                />\r\n              </div>\r\n              <button\r\n                onClick={handlePurchase}\r\n                className={`w-full bg-green-500 text-white py-4 rounded-xl font-semibold hover:bg-green-600 transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center gap-2 shadow-lg shadow-green-500/20`}\r\n                disabled={isPurchasing}\r\n              >\r\n                {isPurchasing ? (\r\n                  <>\r\n                    <svg className=\"animate-spin h-5 w-5\" viewBox=\"0 0 24 24\">\r\n                      <circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" fill=\"none\" className=\"opacity-25\" />\r\n                      <path fill=\"currentColor\" d=\"M4 12a8 8 0 018-8v8H4z\" className=\"opacity-75\" />\r\n                    </svg>\r\n                    Processing...\r\n                  </>\r\n                ) : (\r\n                  'Purchase Now'\r\n                )}\r\n              </button>\r\n            </div>\r\n          </motion.div>\r\n\r\n          {/* Purchased Cards Section */}\r\n          <motion.div variants={cardVariants} className={`p-8 rounded-2xl shadow-xl border ${\r\n            isDarkMode ? 'bg-dark-surface-secondary border-dark-border' : 'bg-white border-gray-100'\r\n          }`}>\r\n            <div className={`absolute top-0 right-0 w-40 h-40 rounded-full filter blur-3xl opacity-30 -mr-20 -mt-20 ${\r\n              isDarkMode ? 'bg-green-900/30' : 'bg-green-50'\r\n            }`}></div>\r\n            <h2 className={`text-2xl font-semibold mb-6 ${\r\n              isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\r\n            }`}>Your Purchased Cards</h2>\r\n            <div className=\"space-y-4 max-h-[400px] overflow-y-auto pr-2\">\r\n              {purchasedCards.length === 0 ? (\r\n                <p className={`text-center py-6 ${\r\n                  isDarkMode ? 'text-dark-text-secondary' : 'text-gray-500'\r\n                }`}>No purchased cards yet. Start by purchasing one!</p>\r\n              ) : (\r\n                purchasedCards.map((card) => (\r\n                  <motion.div\r\n                    key={card.id}\r\n                    initial={{ opacity: 0, x: -20 }}\r\n                    animate={{ opacity: 1, x: 0 }}\r\n                    whileHover={{ scale: 1.02 }}\r\n                    className={`p-5 rounded-xl shadow-md hover:shadow-lg transition-all duration-200 flex justify-between items-center border group ${\r\n                      isDarkMode \r\n                        ? 'bg-dark-surface border-dark-border hover:bg-dark-border' \r\n                        : 'bg-gradient-to-r from-gray-50 to-white border-gray-100/50'\r\n                    }`}\r\n                  >\r\n                    <div>\r\n                      <p className={`text-sm ${\r\n                        isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\r\n                      }`}><strong>Serial:</strong> {card.serial}</p>\r\n                      <p className={`text-sm ${\r\n                        isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\r\n                      }`}><strong>PIN:</strong> {card.pin}</p>\r\n                      <p className={`text-xs ${\r\n                        isDarkMode ? 'text-dark-text-secondary' : 'text-gray-600'\r\n                      }`}><strong>Date:</strong> {card.date}</p>\r\n                    </div>\r\n                    <button\r\n                      onClick={() => copyCardDetails(card)}\r\n                      className={`p-2.5 transition-all duration-200 rounded-lg group-hover:scale-110 ${\r\n                        isDarkMode \r\n                          ? 'text-dark-text-secondary hover:text-primary-400 hover:bg-dark-border' \r\n                          : 'text-gray-500 hover:text-green-600 hover:bg-green-50'\r\n                      }`}\r\n                      title=\"Copy Details\"\r\n                    >\r\n                      {copiedCardId === card.id ? (\r\n                        <CheckIcon className={`h-5 w-5 ${\r\n                          isDarkMode ? 'text-primary-400' : 'text-green-500'\r\n                        }`} />\r\n                      ) : (\r\n                        <ClipboardIcon className=\"h-5 w-5\" />\r\n                      )}\r\n                    </button>\r\n                  </motion.div>\r\n                ))\r\n              )}\r\n            </div>\r\n          </motion.div>\r\n        </motion.div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NecoResultChecker;","import * as React from \"react\";\nfunction CheckIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m4.5 12.75 6 6 9-13.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CheckIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ClipboardIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15.666 3.888A2.25 2.25 0 0 0 13.5 2.25h-3c-1.03 0-1.9.693-2.166 1.638m7.332 0c.055.194.084.4.084.612v0a.75.75 0 0 1-.75.75H9a.75.75 0 0 1-.75-.75v0c0-.212.03-.418.084-.612m7.332 0c.646.049 1.288.11 1.927.184 1.1.128 1.907 1.077 1.907 2.185V19.5a2.25 2.25 0 0 1-2.25 2.25H6.75A2.25 2.25 0 0 1 4.5 19.5V6.257c0-1.108.806-2.057 1.907-2.185a48.208 48.208 0 0 1 1.927-.184\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ClipboardIcon);\nexport default ForwardRef;"],"names":["NecoResultChecker","addTransaction","walletBalance","useTransactions","user","useAuth","isDarkMode","useDarkMode","quantity","setQuantity","useState","purchasedCards","setPurchasedCards","id","serial","pin","date","isPurchasing","setIsPurchasing","notification","setNotification","visible","message","type","copiedCardId","setCopiedCardId","totalAmount","cardVariants","hidden","opacity","y","transition","stiffness","_jsx","className","concat","children","_jsxs","motion","div","initial","animate","duration","ease","exit","variants","staggerChildren","htmlFor","value","onChange","e","selectedQuantity","parseInt","target","disabled","map","num","toLocaleString","readOnly","onClick","async","Error","Promise","resolve","setTimeout","amount","label","description","category","status","newCards","Array","from","length","generateCard","Math","floor","random","toString","Date","now","toLocaleDateString","prev","error","_Fragment","viewBox","cx","cy","r","stroke","strokeWidth","fill","d","card","x","whileHover","scale","details","navigator","clipboard","writeText","copyCardDetails","title","CheckIcon","ClipboardIcon","_ref","svgRef","titleId","props","_objectWithoutProperties","_excluded","React","Object","assign","xmlns","ref","strokeLinecap","strokeLinejoin"],"sourceRoot":""}