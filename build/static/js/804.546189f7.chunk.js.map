{"version":3,"file":"static/js/804.546189f7.chunk.js","mappings":"0NAMA,MAyRA,EAzR2BA,KACzB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,IAClCC,EAAgBC,IAAqBF,EAAAA,EAAAA,UAAS,KAC9CG,EAAcC,IAAmBJ,EAAAA,EAAAA,WAAS,IAC1CK,EAAcC,IAAmBN,EAAAA,EAAAA,UAAS,CAAEO,SAAS,EAAOC,QAAS,GAAIC,KAAM,MAC/EC,EAAcC,IAAmBX,EAAAA,EAAAA,UAAS,OAE3C,WAAEY,IAAeC,EAAAA,EAAAA,KAEjBC,EAHe,KAGDhB,GAad,eAAEiB,EAAc,cAAEC,IAAkBC,EAAAA,EAAAA,KA4DpCC,EAAe,CACnBC,OAAQ,CAAEC,QAAS,EAAGC,EAAG,IACzBd,QAAS,CAAEa,QAAS,EAAGC,EAAG,EAAGC,WAAY,CAAEb,KAAM,SAAUc,UAAW,OAGxE,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,+CAAAC,OACZd,EAAa,yCAA2C,0CACvDe,UACDC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,+BAA8BE,SAAA,EAC3CH,EAAAA,EAAAA,KAACK,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEX,QAAS,EAAGC,EAAG,IAC1BW,QAAS,CAAEZ,QAAS,EAAGC,EAAG,GAC1BC,WAAY,CAAEW,SAAU,GAAKC,KAAM,WACnCT,UAAU,QAAOE,UAEjBC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,WAAUE,SAAA,EACvBH,EAAAA,EAAAA,KAAA,MAAIC,UAAS,yEAAAC,OACXd,EAAa,yBAA2B,iBACvCe,SAAC,0BACJH,EAAAA,EAAAA,KAAA,KAAGC,UAAS,yBAAAC,OACVd,EAAa,2BAA6B,iBACzCe,SAAC,gDACJH,EAAAA,EAAAA,KAAA,OAAKC,UAAS,4EAAAC,OACZd,EAAa,kBAAoB,mBAEnCY,EAAAA,EAAAA,KAAA,OAAKC,UAAS,6EAAAC,OACZd,EAAa,kBAAoB,sBAMtCP,EAAaE,UACZiB,EAAAA,EAAAA,KAACK,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEX,QAAS,EAAGC,EAAG,IAC1BW,QAAS,CAAEZ,QAAS,EAAGC,EAAG,GAC1Bc,KAAM,CAAEf,QAAS,EAAGC,EAAG,IACvBI,UAAS,yHAAAC,OACe,YAAtBrB,EAAaI,KACTG,EAAa,kBAAoB,eACjCA,EAAa,gBAAkB,cAClCe,SAEFtB,EAAaG,WAIlBoB,EAAAA,EAAAA,MAACC,EAAAA,EAAOC,IAAG,CAACM,SArDQ,CACxBjB,OAAQ,CAAEC,QAAS,GACnBb,QAAS,CAAEa,QAAS,EAAGE,WAAY,CAAEe,gBAAiB,OAmDTN,QAAQ,SAASC,QAAQ,UAAUP,UAAU,wCAAuCE,SAAA,EAE3HC,EAAAA,EAAAA,MAACC,EAAAA,EAAOC,IAAG,CAACM,SAAUlB,EAAcO,UAAS,6DAAAC,OAC3Cd,EAAa,+CAAiD,4BAC7De,SAAA,EACDH,EAAAA,EAAAA,KAAA,OAAKC,UAAS,0FAAAC,OACZd,EAAa,kBAAoB,kBAEnCY,EAAAA,EAAAA,KAAA,MAAIC,UAAS,+BAAAC,OACXd,EAAa,yBAA2B,iBACvCe,SAAC,kCACJC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,YAAWE,SAAA,EACxBC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEH,EAAAA,EAAAA,KAAA,SAAOC,UAAS,kCAAAC,OACdd,EAAa,yBAA2B,iBACvCe,SAAC,qBACJH,EAAAA,EAAAA,KAAA,UACEc,MAAOxC,EACPyC,SAzIcC,IAC5B,MAAMC,EAAmBC,SAASF,EAAEG,OAAOL,MAAO,IAClDvC,EAAY0C,EAAiB,EAwIfhB,UAAS,oKAAAC,OACPd,EACI,+FACA,gEAENgC,SAAUzC,EAAawB,SAEtB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAIkB,KAAKC,IACpCtB,EAAAA,EAAAA,KAAA,UAAkBc,MAAOQ,EAAKrB,UAC5Bb,EAAa,yCAA2C,GACzDe,SAAEmB,GAFUA,WAMnBlB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEH,EAAAA,EAAAA,KAAA,SAAOC,UAAS,kCAAAC,OACdd,EAAa,yBAA2B,iBACvCe,SAAC,kBACJH,EAAAA,EAAAA,KAAA,SACEf,KAAK,OACL6B,MAAK,SAAAZ,OAAMZ,EAAYiC,kBACvBC,UAAQ,EACRvB,UAAS,+DAAAC,OACPd,EACI,4DACA,sFAIVY,EAAAA,EAAAA,KAAA,UACEyB,QA3JSC,UACrB9C,GAAgB,GAChBE,EAAgB,CAAEC,SAAS,EAAOC,QAAS,GAAIC,KAAM,KAErD,IAEE,GAAIK,EAAcE,EAChB,MAAM,IAAImC,MAAM,+BAIlBpC,EAAe,CACbqC,OAAQtC,EACRL,KAAM,QACN4C,MAAO,uBACPC,YAAY,eAAD5B,OAAiB5B,EAAQ,8BAAA4B,OAA6B5B,EAAW,EAAI,IAAM,IACtFyD,SAAU,eACVC,OAAQ,eAIV,MAAMC,EAAWC,MAAMC,KAAK,CAAEC,OAAQ9D,IAAY,IA7BjC+D,MACnB,MAAMC,EAAM,OAAApC,OAAUqC,KAAKC,MAAM,IAAuB,IAAhBD,KAAKE,UAAgB,KAAAvC,OAAIqC,KAAKC,MAAM,IAAuB,IAAhBD,KAAKE,UAAgB,KAAAvC,OAAIqC,KAAKC,MAAM,IAAuB,IAAhBD,KAAKE,WAC7HC,EAAMH,KAAKC,MAAM,IAA4B,IAAhBD,KAAKE,UAAsBE,WAC9D,MAAO,CAAEC,GAAIC,KAAKC,MAAQP,KAAKE,SAAUH,SAAQI,MAAKK,MAAM,IAAIF,MAAOG,mBAAmB,SAAU,EA0B1CX,KACxD3D,GAAmBuE,GAAS,IAAIhB,KAAagB,KAE7CnE,EAAgB,CAAEC,SAAS,EAAMC,QAAQ,GAADkB,OAAK5B,EAAQ,0CAA0CW,KAAM,YACrGV,EAAY,EACd,CAAE,MAAO2E,GACPpE,EAAgB,CACdC,SAAS,EACTC,QAA2B,gCAAlBkE,EAAMlE,QACX,wDACA,qCACJC,KAAM,SAEV,CAAC,QACCL,GAAgB,GAChBuE,YAAW,IAAMrE,EAAgB,CAAEC,SAAS,EAAOC,QAAS,GAAIC,KAAM,MAAO,KAC/E,GAuHYgB,UAAS,qKAAAC,OACPd,EACI,iEACA,uHAENgC,SAAUzC,EAAawB,SAEtBxB,GACCyB,EAAAA,EAAAA,MAAAgD,EAAAA,SAAA,CAAAjD,SAAA,EACEC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,uBAAuBoD,QAAQ,YAAWlD,SAAA,EACvDH,EAAAA,EAAAA,KAAA,UAAQsD,GAAG,KAAKC,GAAG,KAAKC,EAAE,KAAKC,OAAO,eAAeC,YAAY,IAAIC,KAAK,OAAO1D,UAAU,gBAC3FD,EAAAA,EAAAA,KAAA,QAAM2D,KAAK,eAAeC,EAAE,yBAAyB3D,UAAU,kBAC3D,mBAIR,wBAORG,EAAAA,EAAAA,MAACC,EAAAA,EAAOC,IAAG,CAACM,SAAUlB,EAAcO,UAAS,6DAAAC,OAC3Cd,EAAa,+CAAiD,4BAC7De,SAAA,EACDH,EAAAA,EAAAA,KAAA,OAAKC,UAAS,0FAAAC,OACZd,EAAa,kBAAoB,kBAEnCgB,EAAAA,EAAAA,MAAA,OAAKH,UAAU,yCAAwCE,SAAA,EACrDH,EAAAA,EAAAA,KAAA,MAAIC,UAAS,0BAAAC,OACXd,EAAa,yBAA2B,iBACvCe,SAAC,yBACH1B,EAAe2D,OAAS,IACvBpC,EAAAA,EAAAA,KAAA,UACEyB,QAhJYoC,KAC1BnF,EAAkB,IAClBI,EAAgB,CAAEC,SAAS,EAAMC,QAAS,2BAA4BC,KAAM,WAAY,EA+I1EgB,UAAS,sDAAAC,OACPd,EAAa,kCAAoC,mCAChDe,SACJ,kBAKLH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gHAA+GE,SACjG,IAA1B1B,EAAe2D,QACdpC,EAAAA,EAAAA,KAAA,KAAGC,UAAS,oBAAAC,OACVd,EAAa,2BAA6B,iBACzCe,SAAC,2DAEJ1B,EAAe4C,KAAKyC,IAClB1D,EAAAA,EAAAA,MAACC,EAAAA,EAAOC,IAAG,CAETC,QAAS,CAAEX,QAAS,EAAGmE,GAAI,IAC3BvD,QAAS,CAAEZ,QAAS,EAAGmE,EAAG,GAC1BC,WAAY,CAAEC,MAAO,MACrBhE,UAAS,uHAAAC,OACPd,EACI,0DACA,6DACHe,SAAA,EAEHC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,KAAGH,UAAS,WAAAC,OACVd,EAAa,yBAA2B,iBACvCe,SAAA,EAACH,EAAAA,EAAAA,KAAA,UAAAG,SAAQ,YAAgB,IAAE2D,EAAKxB,WACnClC,EAAAA,EAAAA,MAAA,KAAGH,UAAS,WAAAC,OACVd,EAAa,yBAA2B,iBACvCe,SAAA,EAACH,EAAAA,EAAAA,KAAA,UAAAG,SAAQ,SAAa,IAAE2D,EAAKpB,QAChCtC,EAAAA,EAAAA,MAAA,KAAGH,UAAS,WAAAC,OACVd,EAAa,2BAA6B,iBACzCe,SAAA,EAACH,EAAAA,EAAAA,KAAA,UAAAG,SAAQ,UAAc,IAAE2D,EAAKf,YAEnC/C,EAAAA,EAAAA,KAAA,UACEyB,QAASA,IA9LJqC,KACvB,MAAMI,EAAO,WAAAhE,OAAc4D,EAAKxB,OAAM,WAAApC,OAAU4D,EAAKpB,KACrDyB,UAAUC,UAAUC,UAAUH,GAC9B/E,EAAgB2E,EAAKlB,IACrBO,YAAW,IAAMhE,EAAgB,OAAO,IAAK,EA0LZmF,CAAgBR,GAC/B7D,UAAS,sEAAAC,OACPd,EACI,uEACA,wDAENmF,MAAM,eAAcpE,SAEnBjB,IAAiB4E,EAAKlB,IACrB5C,EAAAA,EAAAA,KAACwE,EAAAA,EAAS,CAACvE,UAAS,WAAAC,OAClBd,EAAa,mBAAqB,qBAGpCY,EAAAA,EAAAA,KAACyE,EAAAA,EAAa,CAACxE,UAAU,gBAnCxB6D,EAAKlB,kBA6CpB,C,sFC1RV,SAAS4B,EAASE,EAIfC,GAAQ,IAJQ,MACjBJ,EAAK,QACLK,GAEDF,EADIG,GAAKC,EAAAA,EAAAA,GAAAJ,EAAAK,GAER,OAAoBC,EAAAA,cAAoB,MAAOC,OAAOC,OAAO,CAC3DC,MAAO,6BACPxB,KAAM,OACNN,QAAS,YACTK,YAAa,IACbD,OAAQ,eACR,cAAe,OACf,YAAa,OACb2B,IAAKT,EACL,kBAAmBC,GAClBC,GAAQN,EAAqBS,EAAAA,cAAoB,QAAS,CAC3DpC,GAAIgC,GACHL,GAAS,KAAmBS,EAAAA,cAAoB,OAAQ,CACzDK,cAAe,QACfC,eAAgB,QAChB1B,EAAG,0BAEP,CACA,MACA,EADiCoB,EAAAA,WAAiBR,E,sFCvBlD,SAASC,EAAaC,EAInBC,GAAQ,IAJY,MACrBJ,EAAK,QACLK,GAEDF,EADIG,GAAKC,EAAAA,EAAAA,GAAAJ,EAAAK,GAER,OAAoBC,EAAAA,cAAoB,MAAOC,OAAOC,OAAO,CAC3DC,MAAO,6BACPxB,KAAM,OACNN,QAAS,YACTK,YAAa,IACbD,OAAQ,eACR,cAAe,OACf,YAAa,OACb2B,IAAKT,EACL,kBAAmBC,GAClBC,GAAQN,EAAqBS,EAAAA,cAAoB,QAAS,CAC3DpC,GAAIgC,GACHL,GAAS,KAAmBS,EAAAA,cAAoB,OAAQ,CACzDK,cAAe,QACfC,eAAgB,QAChB1B,EAAG,qXAEP,CACA,MACA,EADiCoB,EAAAA,WAAiBP,E","sources":["pages/result checker/nbais result checker/index.jsx","../node_modules/@heroicons/react/24/outline/esm/CheckIcon.js","../node_modules/@heroicons/react/24/outline/esm/ClipboardIcon.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { ClipboardIcon, CheckIcon } from '@heroicons/react/24/outline';\nimport { useTransactions } from '../../../contexts/TransactionContext';\nimport { useDarkMode } from '../../../contexts/DarkModeContext';\n\nconst NbaisResultChecker = () => {\n  const [quantity, setQuantity] = useState(1);\n  const [purchasedCards, setPurchasedCards] = useState([]);\n  const [isPurchasing, setIsPurchasing] = useState(false);\n  const [notification, setNotification] = useState({ visible: false, message: '', type: '' });\n  const [copiedCardId, setCopiedCardId] = useState(null);\n  const pricePerCard = 1800;\n  const { isDarkMode } = useDarkMode();\n\n  const totalAmount = quantity * pricePerCard;\n\n  const handleQuantityChange = (e) => {\n    const selectedQuantity = parseInt(e.target.value, 10);\n    setQuantity(selectedQuantity);\n  };\n\n  const generateCard = () => {\n    const serial = `NBA-${Math.floor(1000 + Math.random() * 9000)}-${Math.floor(1000 + Math.random() * 9000)}-${Math.floor(1000 + Math.random() * 9000)}`;\n    const pin = Math.floor(100000000 + Math.random() * 900000000).toString();\n    return { id: Date.now() + Math.random(), serial, pin, date: new Date().toLocaleDateString('en-CA') };\n  };\n\n  const { addTransaction, walletBalance } = useTransactions();\n\n  const handlePurchase = async () => {\n    setIsPurchasing(true);\n    setNotification({ visible: false, message: '', type: '' });\n\n    try {\n      // Check if user has enough balance\n      if (totalAmount > walletBalance) {\n        throw new Error('Insufficient wallet balance');\n      }\n\n      // Process the payment\n      addTransaction({\n        amount: totalAmount,\n        type: 'debit',\n        label: 'NBAIS Result Checker',\n        description: `Purchase of ${quantity} NBAIS Result Checker Card${quantity > 1 ? 's' : ''}`,\n        category: 'scratch_card',\n        status: 'Successful'\n      });\n\n      // Generate the cards after successful payment\n      const newCards = Array.from({ length: quantity }, () => generateCard());\n      setPurchasedCards((prev) => [...newCards, ...prev]);\n      \n      setNotification({ visible: true, message: `${quantity} NBAIS card(s) purchased successfully!`, type: 'success' });\n      setQuantity(1);\n    } catch (error) {\n      setNotification({ \n        visible: true, \n        message: error.message === 'Insufficient wallet balance' \n          ? 'Insufficient wallet balance. Please fund your wallet.'\n          : 'Purchase failed. Please try again.', \n        type: 'error' \n      });\n    } finally {\n      setIsPurchasing(false);\n      setTimeout(() => setNotification({ visible: false, message: '', type: '' }), 2500);\n    }\n  };\n\n  const copyCardDetails = (card) => {\n    const details = `Serial: ${card.serial}\\nPIN: ${card.pin}`;\n    navigator.clipboard.writeText(details);\n    setCopiedCardId(card.id);\n    setTimeout(() => setCopiedCardId(null), 2000);\n  };\n\n  const clearPurchasedCards = () => {\n    setPurchasedCards([]);\n    setNotification({ visible: true, message: 'Purchased cards cleared!', type: 'success' });\n  };\n\n  // Animation variants\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: { opacity: 1, transition: { staggerChildren: 0.05 } },\n  };\n\n  const cardVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: { opacity: 1, y: 0, transition: { type: 'spring', stiffness: 120 } },\n  };\n\n  return (\n    <div className={`min-h-screen transition-colors duration-200 ${\n      isDarkMode ? 'bg-dark-surface text-dark-text-primary' : 'bg-gradient-to-b from-gray-50 to-white'\n    }`}>\n      <div className=\"mx-auto px-4 sm:px-6 lg:px-8\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6, ease: 'easeOut' }}\n          className=\"mb-12\"\n        >\n          <div className=\"relative\">\n            <h1 className={`text-3xl md:text-4xl font-extrabold tracking-tight mb-2 relative z-10 ${\n              isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\n            }`}>NBAIS Result Checker</h1>\n            <p className={`text-lg relative z-10 ${\n              isDarkMode ? 'text-dark-text-secondary' : 'text-gray-600'\n            }`}>Purchase your NBAIS scratch cards securely</p>\n            <div className={`absolute -top-6 -left-6 w-24 h-24 rounded-full filter blur-xl opacity-60 ${\n              isDarkMode ? 'bg-green-900/30' : 'bg-green-100'\n            }`}></div>\n            <div className={`absolute top-10 -right-4 w-16 h-16 rounded-full filter blur-lg opacity-40 ${\n              isDarkMode ? 'bg-green-900/20' : 'bg-green-50'\n            }`}></div>\n          </div>\n        </motion.div>\n\n        {/* Notification */}\n        {notification.visible && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: 20 }}\n            className={`fixed bottom-6 right-6 px-6 py-4 rounded-xl shadow-xl backdrop-blur-sm text-white font-medium flex items-center gap-3 ${\n              notification.type === 'success' \n                ? isDarkMode ? 'bg-green-600/90' : 'bg-green-500'\n                : isDarkMode ? 'bg-red-600/90' : 'bg-red-500'\n            }`}\n          >\n            {notification.message}\n          </motion.div>\n        )}\n\n        <motion.div variants={containerVariants} initial=\"hidden\" animate=\"visible\" className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          {/* Purchase Section */}\n          <motion.div variants={cardVariants} className={`p-8 rounded-2xl shadow-xl border relative overflow-hidden ${\n            isDarkMode ? 'bg-dark-surface-secondary border-dark-border' : 'bg-white border-gray-100'\n          }`}>\n            <div className={`absolute top-0 right-0 w-40 h-40 rounded-full filter blur-3xl opacity-30 -mr-20 -mt-20 ${\n              isDarkMode ? 'bg-green-900/30' : 'bg-green-50'\n            }`}></div>\n            <h2 className={`text-2xl font-semibold mb-6 ${\n              isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\n            }`}>Purchase NBAIS Scratch Cards</h2>\n            <div className=\"space-y-6\">\n              <div>\n                <label className={`block text-sm font-medium mb-2 ${\n                  isDarkMode ? 'text-dark-text-primary' : 'text-gray-700'\n                }`}>Select Quantity</label>\n                <select\n                  value={quantity}\n                  onChange={handleQuantityChange}\n                  className={`w-full p-4 border rounded-xl focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200 shadow-sm appearance-none ${\n                    isDarkMode \n                      ? 'bg-dark-surface border-dark-border text-dark-text-primary hover:border-dark-border-secondary' \n                      : 'bg-white border-gray-200 text-gray-800 hover:border-gray-300'\n                  }`}\n                  disabled={isPurchasing}\n                >\n                  {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((num) => (\n                    <option key={num} value={num} className={\n                      isDarkMode ? 'bg-dark-surface text-dark-text-primary' : ''\n                    }>{num}</option>\n                  ))}\n                </select>\n              </div>\n              <div>\n                <label className={`block text-sm font-medium mb-2 ${\n                  isDarkMode ? 'text-dark-text-primary' : 'text-gray-700'\n                }`}>Total Amount</label>\n                <input\n                  type=\"text\"\n                  value={`₦${totalAmount.toLocaleString()}`}\n                  readOnly\n                  className={`w-full p-4 border rounded-xl font-medium cursor-not-allowed ${\n                    isDarkMode \n                      ? 'bg-dark-surface border-dark-border text-dark-text-primary' \n                      : 'bg-gradient-to-r from-green-50 to-green-100/30 border-gray-200 text-gray-800'\n                  }`}\n                />\n              </div>\n              <button\n                onClick={handlePurchase}\n                className={`w-full py-4 rounded-xl font-semibold transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center gap-2 shadow-lg ${\n                  isDarkMode\n                    ? 'bg-green-600 hover:bg-green-700 text-white shadow-green-900/20'\n                    : 'bg-gradient-to-r from-green-600 to-green-500 hover:from-green-700 hover:to-green-600 text-white shadow-green-500/20'\n                }`}\n                disabled={isPurchasing}\n              >\n                {isPurchasing ? (\n                  <>\n                    <svg className=\"animate-spin h-5 w-5\" viewBox=\"0 0 24 24\">\n                      <circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" fill=\"none\" className=\"opacity-25\" />\n                      <path fill=\"currentColor\" d=\"M4 12a8 8 0 018-8v8H4z\" className=\"opacity-75\" />\n                    </svg>\n                    Processing...\n                  </>\n                ) : (\n                  'Purchase Now'\n                )}\n              </button>\n            </div>\n          </motion.div>\n\n          {/* Purchased Cards Section */}\n          <motion.div variants={cardVariants} className={`p-8 rounded-2xl shadow-xl border relative overflow-hidden ${\n            isDarkMode ? 'bg-dark-surface-secondary border-dark-border' : 'bg-white border-gray-100'\n          }`}>\n            <div className={`absolute top-0 right-0 w-40 h-40 rounded-full filter blur-3xl opacity-30 -mr-20 -mt-20 ${\n              isDarkMode ? 'bg-green-900/30' : 'bg-green-50'\n            }`}></div>\n            <div className=\"flex justify-between items-center mb-6\">\n              <h2 className={`text-2xl font-semibold ${\n                isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\n              }`}>Your Purchased Cards</h2>\n              {purchasedCards.length > 0 && (\n                <button\n                  onClick={clearPurchasedCards}\n                  className={`text-sm font-medium transition-colors duration-200 ${\n                    isDarkMode ? 'text-red-400 hover:text-red-300' : 'text-red-600 hover:text-red-700'\n                  }`}\n                >\n                  Clear All\n                </button>\n              )}\n            </div>\n            <div className=\"space-y-4 max-h-[450px] overflow-y-auto pr-2 scrollbar-thin scrollbar-thumb-gray-300 scrollbar-track-gray-100\">\n              {purchasedCards.length === 0 ? (\n                <p className={`text-center py-8 ${\n                  isDarkMode ? 'text-dark-text-secondary' : 'text-gray-500'\n                }`}>No purchased cards yet. Get started by purchasing one!</p>\n              ) : (\n                purchasedCards.map((card) => (\n                  <motion.div\n                    key={card.id}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    whileHover={{ scale: 1.02 }}\n                    className={`p-5 rounded-xl shadow-md hover:shadow-lg transition-all duration-200 flex justify-between items-center border group ${\n                      isDarkMode \n                        ? 'bg-dark-surface border-dark-border hover:bg-dark-border' \n                        : 'bg-gradient-to-r from-gray-50 to-white border-gray-100/50'\n                    }`}\n                  >\n                    <div>\n                      <p className={`text-sm ${\n                        isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\n                      }`}><strong>Serial:</strong> {card.serial}</p>\n                      <p className={`text-sm ${\n                        isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\n                      }`}><strong>PIN:</strong> {card.pin}</p>\n                      <p className={`text-xs ${\n                        isDarkMode ? 'text-dark-text-secondary' : 'text-gray-600'\n                      }`}><strong>Date:</strong> {card.date}</p>\n                    </div>\n                    <button\n                      onClick={() => copyCardDetails(card)}\n                      className={`p-2.5 transition-all duration-200 rounded-lg group-hover:scale-110 ${\n                        isDarkMode \n                          ? 'text-dark-text-secondary hover:text-primary-400 hover:bg-dark-border' \n                          : 'text-gray-500 hover:text-green-600 hover:bg-green-50'\n                      }`}\n                      title=\"Copy Details\"\n                    >\n                      {copiedCardId === card.id ? (\n                        <CheckIcon className={`h-5 w-5 ${\n                          isDarkMode ? 'text-primary-400' : 'text-green-500'\n                        }`} />\n                      ) : (\n                        <ClipboardIcon className=\"h-5 w-5\" />\n                      )}\n                    </button>\n                  </motion.div>\n                ))\n              )}\n            </div>\n          </motion.div>\n        </motion.div>\n      </div>\n    </div>\n  );\n};\n\nexport default NbaisResultChecker;","import * as React from \"react\";\nfunction CheckIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m4.5 12.75 6 6 9-13.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CheckIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ClipboardIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15.666 3.888A2.25 2.25 0 0 0 13.5 2.25h-3c-1.03 0-1.9.693-2.166 1.638m7.332 0c.055.194.084.4.084.612v0a.75.75 0 0 1-.75.75H9a.75.75 0 0 1-.75-.75v0c0-.212.03-.418.084-.612m7.332 0c.646.049 1.288.11 1.927.184 1.1.128 1.907 1.077 1.907 2.185V19.5a2.25 2.25 0 0 1-2.25 2.25H6.75A2.25 2.25 0 0 1 4.5 19.5V6.257c0-1.108.806-2.057 1.907-2.185a48.208 48.208 0 0 1 1.927-.184\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ClipboardIcon);\nexport default ForwardRef;"],"names":["NbaisResultChecker","quantity","setQuantity","useState","purchasedCards","setPurchasedCards","isPurchasing","setIsPurchasing","notification","setNotification","visible","message","type","copiedCardId","setCopiedCardId","isDarkMode","useDarkMode","totalAmount","addTransaction","walletBalance","useTransactions","cardVariants","hidden","opacity","y","transition","stiffness","_jsx","className","concat","children","_jsxs","motion","div","initial","animate","duration","ease","exit","variants","staggerChildren","value","onChange","e","selectedQuantity","parseInt","target","disabled","map","num","toLocaleString","readOnly","onClick","async","Error","amount","label","description","category","status","newCards","Array","from","length","generateCard","serial","Math","floor","random","pin","toString","id","Date","now","date","toLocaleDateString","prev","error","setTimeout","_Fragment","viewBox","cx","cy","r","stroke","strokeWidth","fill","d","clearPurchasedCards","card","x","whileHover","scale","details","navigator","clipboard","writeText","copyCardDetails","title","CheckIcon","ClipboardIcon","_ref","svgRef","titleId","props","_objectWithoutProperties","_excluded","React","Object","assign","xmlns","ref","strokeLinecap","strokeLinejoin"],"sourceRoot":""}