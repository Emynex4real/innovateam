{"version":3,"file":"static/js/941.52749ccb.chunk.js","mappings":"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","sources":["pages/support/index.jsx","../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { FaMapMarkerAlt, FaEnvelope, FaPhone, FaLink, FaArrowRight, FaSpinner } from 'react-icons/fa';\r\nimport toast from 'react-hot-toast';\r\nimport { useDarkMode } from '../../contexts/DarkModeContext';\r\n\r\nconst Support = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    subject: '',\r\n    message: '',\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [selectedCategory, setSelectedCategory] = useState('general');\r\n  const [faqExpanded, setFaqExpanded] = useState(null);\r\n  const { isDarkMode } = useDarkMode();\r\n\r\n  const supportCategories = [\r\n    { id: 'general', label: 'General Support' },\r\n    { id: 'technical', label: 'Technical Issues' },\r\n    { id: 'billing', label: 'Billing & Payments' },\r\n    { id: 'feature', label: 'Feature Request' },\r\n  ];\r\n\r\n  const faqs = [\r\n    {\r\n      question: 'How do I reset my password?',\r\n      answer: 'You can reset your password by clicking on the \"Forgot Password\" link on the login page. Follow the instructions sent to your email to create a new password.'\r\n    },\r\n    {\r\n      question: 'What payment methods do you accept?',\r\n      answer: 'We accept various payment methods including credit/debit cards, bank transfers, and mobile money. All transactions are secured and encrypted.'\r\n    },\r\n    {\r\n      question: 'How can I track my transaction history?',\r\n      answer: 'You can view your complete transaction history in the Transactions page of your dashboard. Filter and search options are available for easy tracking.'\r\n    },\r\n  ];\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n    if (errors[name]) setErrors((prev) => ({ ...prev, [name]: '' }));\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    if (!formData.name.trim()) newErrors.name = 'Name is required';\r\n    if (!formData.email.trim()) newErrors.email = 'Email is required';\r\n    else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) newErrors.email = 'Invalid email format';\r\n    if (!formData.subject.trim()) newErrors.subject = 'Subject is required';\r\n    if (!formData.message.trim()) newErrors.message = 'Message is required';\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) return;\r\n\r\n    setIsSubmitting(true);\r\n    try {\r\n      // Simulate API call\r\n      await new Promise((resolve) => setTimeout(resolve, 1500));\r\n      console.log('Form submitted:', formData);\r\n      toast.success('Message sent successfully!');\r\n      setFormData({ name: '', email: '', subject: '', message: '' });\r\n    } catch (error) {\r\n      toast.error('Failed to send message. Please try again.');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  // Animation variants\r\n  const containerVariants = {\r\n    hidden: { opacity: 0, y: 20 },\r\n    visible: { opacity: 1, y: 0, transition: { duration: 0.5 } },\r\n  };\r\n\r\n  return (\r\n    <div className={`min-h-screen p-4 font-nunito transition-colors duration-200 ${\r\n      isDarkMode ? 'bg-dark-surface text-dark-text-primary' : 'bg-gray-50'\r\n    }`}>\r\n      <div className=\"max-w-7xl mx-auto space-y-8\">\r\n\r\n        {/* Hero Section */}\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className={`text-center mb-12 p-8 rounded-xl shadow-lg ${\r\n            isDarkMode ? 'bg-dark-surface-secondary border border-dark-border' : 'bg-white'\r\n          }`}\r\n        >\r\n          <h1 className={`text-3xl md:text-4xl font-bold mb-4 ${\r\n            isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\r\n          }`}>How Can We Help You?</h1>\r\n          <p className={`max-w-2xl mx-auto mb-8 ${\r\n            isDarkMode ? 'text-dark-text-secondary' : 'text-gray-600'\r\n          }`}>Choose a category below or search for specific help. Our support team is here to assist you 24/7.</p>\r\n\r\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n            {supportCategories.map((category) => (\r\n              <button\r\n                key={category.id}\r\n                onClick={() => setSelectedCategory(category.id)}\r\n                className={`p-4 rounded-lg transition-all duration-200 ${\r\n                  selectedCategory === category.id\r\n                    ? isDarkMode\r\n                      ? 'bg-green-600 text-white shadow-lg scale-105'\r\n                      : 'bg-primary-color text-white shadow-lg scale-105'\r\n                    : isDarkMode\r\n                      ? 'bg-dark-surface text-dark-text-secondary hover:bg-dark-border'\r\n                      : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\r\n                }`}\r\n              >\r\n                {category.label}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </motion.div>\r\n\r\n        {/* FAQ Section */}\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          className={`mb-12 p-8 rounded-xl shadow-lg ${\r\n            isDarkMode ? 'bg-dark-surface-secondary border border-dark-border' : 'bg-white'\r\n          }`}\r\n        >\r\n          <h2 className={`text-2xl font-bold mb-6 ${\r\n            isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\r\n          }`}>Frequently Asked Questions</h2>\r\n          <div className=\"space-y-4\">\r\n            {faqs.map((faq, index) => (\r\n              <motion.div\r\n                key={index}\r\n                className={`border rounded-lg overflow-hidden ${\r\n                  isDarkMode ? 'border-dark-border' : 'border-gray-200'\r\n                }`}\r\n                initial={false}\r\n              >\r\n                <button\r\n                  className={`w-full p-4 text-left flex justify-between items-center transition-colors duration-200 ${\r\n                    isDarkMode \r\n                      ? 'bg-dark-surface hover:bg-dark-border' \r\n                      : 'bg-gray-50 hover:bg-gray-100'\r\n                  }`}\r\n                  onClick={() => setFaqExpanded(faqExpanded === index ? null : index)}\r\n                >\r\n                  <span className={`font-medium ${\r\n                    isDarkMode ? 'text-dark-text-primary' : 'text-gray-700'\r\n                  }`}>{faq.question}</span>\r\n                  <FaArrowRight\r\n                    className={`transform transition-transform duration-200 ${\r\n                      faqExpanded === index ? 'rotate-90' : ''\r\n                    } ${\r\n                      isDarkMode ? 'text-dark-text-secondary' : 'text-gray-500'\r\n                    }`}\r\n                  />\r\n                </button>\r\n                <AnimatePresence>\r\n                  {faqExpanded === index && (\r\n                    <motion.div\r\n                      initial={{ height: 0, opacity: 0 }}\r\n                      animate={{ height: 'auto', opacity: 1 }}\r\n                      exit={{ height: 0, opacity: 0 }}\r\n                      transition={{ duration: 0.2 }}\r\n                      className={`border-t ${\r\n                        isDarkMode ? 'border-dark-border' : 'border-gray-200'\r\n                      }`}\r\n                    >\r\n                      <div className={`p-4 ${\r\n                        isDarkMode ? 'bg-dark-surface text-dark-text-secondary' : 'bg-white text-gray-600'\r\n                      }`}>\r\n                        {faq.answer}\r\n                      </div>\r\n                    </motion.div>\r\n                  )}\r\n                </AnimatePresence>\r\n              </motion.div>\r\n            ))}\r\n          </div>\r\n        </motion.div>\r\n\r\n        {/* Contact Form Section */}\r\n        <motion.div\r\n          variants={containerVariants}\r\n          initial=\"hidden\"\r\n          animate=\"visible\"\r\n          className={`rounded-xl shadow-lg w-full flex flex-col lg:flex-row overflow-hidden ${\r\n            isDarkMode ? 'bg-dark-surface-secondary' : 'bg-white'\r\n          }`}\r\n        >\r\n          {/* Contact Information */}\r\n          <div className=\"bg-gradient-to-br from-primary-color to-green-600 text-white p-8 lg:w-1/3 flex flex-col gap-8\">\r\n            <h2 className=\"text-2xl font-bold\">Get in Touch</h2>\r\n            <p className=\"text-green-100\">Our support team is available 24/7 to help you with any questions or concerns.</p>\r\n\r\n            <div className=\"space-y-6\">\r\n              <div className=\"flex items-center space-x-4 bg-green-700/30 p-4 rounded-lg hover:bg-green-700/40 transition-colors duration-200\">\r\n                <div className=\"bg-white/10 p-3 rounded-full\">\r\n                  <FaMapMarkerAlt size={20} />\r\n                </div>\r\n                <div>\r\n                  <h3 className=\"font-medium\">Visit Us</h3>\r\n                  <p className=\"text-sm text-green-100\">06, Opposite GGSS Bakori, Dutsen Rimt, Katsina.</p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex items-center space-x-4 bg-green-700/30 p-4 rounded-lg hover:bg-green-700/40 transition-colors duration-200\">\r\n                <div className=\"bg-white/10 p-3 rounded-full\">\r\n                  <FaEnvelope size={20} />\r\n                </div>\r\n                <div>\r\n                  <h3 className=\"font-medium\">Email Us</h3>\r\n                  <a href=\"mailto:info@arewagate.com\" className=\"text-sm text-green-100 hover:text-white transition-colors duration-200\">info@arewagate.com</a>\r\n                  <a href=\"mailto:arewagatecafe@gmail.com\" className=\"block text-sm text-green-100 hover:text-white transition-colors duration-200\">arewagatecafe@gmail.com</a>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex items-center space-x-4 bg-green-700/30 p-4 rounded-lg hover:bg-green-700/40 transition-colors duration-200\">\r\n                <div className=\"bg-white/10 p-3 rounded-full\">\r\n                  <FaPhone size={20} />\r\n                </div>\r\n                <div>\r\n                  <h3 className=\"font-medium\">Call Us</h3>\r\n                  <a href=\"tel:+2347038374534\" className=\"text-sm text-green-100 hover:text-white transition-colors duration-200\">+234 703 837 4534</a>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex items-center space-x-4 bg-green-700/30 p-4 rounded-lg hover:bg-green-700/40 transition-colors duration-200\">\r\n                <div className=\"bg-white/10 p-3 rounded-full\">\r\n                  <FaLink size={20} />\r\n                </div>\r\n                <div>\r\n                  <h3 className=\"font-medium\">Quick Links</h3>\r\n                  <a href=\"https://chat.whatsapp.com/arewagate\" className=\"block text-sm text-green-100 hover:text-white transition-colors duration-200\">Join Support Group</a>\r\n                  <a href=\"https://support.arewagate.com/chat\" className=\"block text-sm text-green-100 hover:text-white transition-colors duration-200\">Live Chat Support</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Contact Form */}\r\n          <div className={`p-8 lg:w-2/3 ${\r\n            isDarkMode ? 'bg-dark-surface' : 'bg-white'\r\n          }`}>\r\n            <h2 className={`text-2xl font-bold mb-4 ${\r\n              isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\r\n            }`}>Send Us a Message</h2>\r\n            <p className={`mb-6 ${\r\n              isDarkMode ? 'text-dark-text-secondary' : 'text-gray-600'\r\n            }`}>Fill out the form below and we'll get back to you as soon as possible.</p>\r\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n              {[\r\n                { label: 'Your Name', name: 'name', type: 'text', placeholder: 'Full Name' },\r\n                { label: 'Your Email', name: 'email', type: 'email', placeholder: 'Email address' },\r\n                { label: 'Subject', name: 'subject', type: 'text', placeholder: 'Subject' },\r\n              ].map((field) => (\r\n                <div key={field.name}>\r\n                  <label className={`block text-sm font-medium mb-1 ${\r\n                    isDarkMode ? 'text-dark-text-primary' : 'text-gray-700'\r\n                  }`} htmlFor={field.name}>\r\n                    {field.label}\r\n                  </label>\r\n                  <input\r\n                    id={field.name}\r\n                    type={field.type}\r\n                    name={field.name}\r\n                    value={formData[field.name]}\r\n                    onChange={handleChange}\r\n                    className={`w-full p-4 border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-color transition-all duration-200 ${\r\n                      errors[field.name]\r\n                        ? 'border-red-500'\r\n                        : isDarkMode\r\n                          ? 'border-dark-border bg-dark-surface text-dark-text-primary'\r\n                          : 'border-gray-300 bg-gray-50'\r\n                    }`}\r\n                    placeholder={field.placeholder}\r\n                    required\r\n                    disabled={isSubmitting}\r\n                  />\r\n                  {errors[field.name] && <p className=\"text-red-500 text-xs mt-1\">{errors[field.name]}</p>}\r\n                </div>\r\n              ))}\r\n\r\n              <div>\r\n                <label className={`block text-sm font-medium mb-1 ${\r\n                  isDarkMode ? 'text-dark-text-primary' : 'text-gray-700'\r\n                }`} htmlFor=\"message\">\r\n                  Message\r\n                </label>\r\n                <textarea\r\n                  id=\"message\"\r\n                  name=\"message\"\r\n                  value={formData.message}\r\n                  onChange={handleChange}\r\n                  className={`w-full p-4 border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-color transition-all duration-200 ${\r\n                    errors.message\r\n                      ? 'border-red-500'\r\n                      : isDarkMode\r\n                        ? 'border-dark-border bg-dark-surface text-dark-text-primary'\r\n                        : 'border-gray-300 bg-gray-50'\r\n                  }`}\r\n                  rows={4}\r\n                  placeholder=\"Your message\"\r\n                  required\r\n                  disabled={isSubmitting}\r\n                />\r\n                {errors.message && <p className=\"text-red-500 text-xs mt-1\">{errors.message}</p>}\r\n              </div>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                disabled={isSubmitting}\r\n                className={`w-full py-3 px-6 rounded-lg font-semibold flex items-center justify-center gap-2 transition-colors duration-200 ${\r\n                  isDarkMode\r\n                    ? 'bg-green-600 hover:bg-green-700 text-white'\r\n                    : 'bg-primary-color hover:bg-primary-color-dark text-white'\r\n                } disabled:opacity-50 disabled:cursor-not-allowed`}\r\n              >\r\n                {isSubmitting ? (\r\n                  <>\r\n                    <FaSpinner className=\"animate-spin\" />\r\n                    Sending...\r\n                  </>\r\n                ) : (\r\n                  'Send Message'\r\n                )}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </motion.div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Support;","import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                // clean up the exiting children map\n                exitingChildren.delete(key);\n                // compute the keys of children that were rendered once but are no longer present\n                // this could happen in case of too many fast consequent renderings\n                // @link https://github.com/framer/motion/issues/2023\n                const leftOverKeys = Array.from(allChildren.keys()).filter((childKey) => !targetKeys.includes(childKey));\n                // clean up the all children map\n                leftOverKeys.forEach((leftOverKey) => allChildren.delete(leftOverKey));\n                // make sure to render only the children that are actually visible\n                presentChildren.current = filteredChildren.filter((presentChild) => {\n                    const presentChildKey = getChildKey(presentChild);\n                    return (\n                    // filter out the node exiting\n                    presentChildKey === key ||\n                        // filter out the leftover children\n                        leftOverKeys.includes(presentChildKey));\n                });\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exitingChildren.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n"],"names":["Support","formData","setFormData","useState","name","email","subject","message","errors","setErrors","isSubmitting","setIsSubmitting","selectedCategory","setSelectedCategory","faqExpanded","setFaqExpanded","isDarkMode","useDarkMode","handleChange","e","value","target","prev","_objectSpread","_jsx","className","concat","children","_jsxs","motion","div","initial","opacity","y","animate","id","label","map","category","onClick","question","answer","faq","index","FaArrowRight","AnimatePresence","height","exit","transition","duration","variants","hidden","visible","FaMapMarkerAlt","size","FaEnvelope","href","FaPhone","FaLink","onSubmit","async","preventDefault","validateForm","newErrors","trim","test","Object","keys","length","Promise","resolve","setTimeout","console","log","toast","success","error","type","placeholder","field","htmlFor","onChange","required","disabled","rows","_Fragment","FaSpinner","useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","React","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","isPresent","sizeRef","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","PopChild","_ref","useId","ref","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","PresenceChild","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","isComplete","values","register","delete","undefined","forEach","_","key","PresenceContext","Provider","Map","getChildKey","child","exitBeforeEnter","invariant","forceRender","useContext","LayoutGroupContext","forcedRenderCount","setForcedRenderCount","useCallback","frame","postRender","useForceUpdate","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exitingChildren","presentChildren","allChildren","isInitialRender","callback","updateChildLookup","clear","useEffect","presentKeys","targetKeys","numPresent","i","indexOf","has","component","get","insertionIndex","exitingComponent","onExit","leftOverKeys","Array","from","filter","childKey","includes","leftOverKey","presentChild","presentChildKey","splice","cloneElement"],"sourceRoot":""}