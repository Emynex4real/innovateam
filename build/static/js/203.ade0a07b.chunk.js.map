{"version":3,"file":"static/js/203.ade0a07b.chunk.js","mappings":"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","sources":["components/ui/button.jsx","components/ui/card.jsx","components/ui/input.jsx","lib/utils.js","pages/wallet/index.jsx","../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cn } from \"../../lib/utils\"\n\nconst Button = React.forwardRef(({ className, variant = \"default\", size = \"default\", asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n  return (\n    <Comp\n      className={cn(\n        \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n        {\n          \"bg-primary text-primary-foreground hover:bg-primary/90\": variant === \"default\",\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\": variant === \"destructive\",\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\": variant === \"outline\",\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\": variant === \"secondary\",\n          \"hover:bg-accent hover:text-accent-foreground\": variant === \"ghost\",\n          \"bg-green-500 text-white hover:bg-green-600\": variant === \"success\",\n          \"h-10 px-4 py-2\": size === \"default\",\n          \"h-9 rounded-md px-3\": size === \"sm\",\n          \"h-11 rounded-md px-8\": size === \"lg\"\n        },\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nButton.displayName = \"Button\"\n\nexport default Button ","import * as React from \"react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Card = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport default Card\nexport { CardHeader, CardFooter, CardTitle, CardDescription, CardContent } ","import * as React from \"react\"\nimport { cn } from \"../../lib/utils\"\n\nconst Input = React.forwardRef(({ className, type, ...props }, ref) => {\n  return (\n    <input\n      type={type}\n      className={cn(\n        \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        \"dark:border-dark-border dark:bg-dark-surface dark:text-dark-text-primary dark:placeholder:text-dark-text-secondary dark:focus-visible:ring-primary-400\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nInput.displayName = \"Input\"\n\nexport default Input ","import { clsx } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs) {\r\n  return twMerge(clsx(inputs))\r\n} ","import React, { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useTransactions } from '../../contexts/TransactionContext';\nimport { FiCreditCard, FiDollarSign, FiClock, FiArrowUp, FiArrowDown, FiX, FiClipboard, FiCheck } from 'react-icons/fi';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { useDarkMode } from '../../contexts/DarkModeContext';\nimport Card, { CardHeader, CardTitle, CardDescription, CardContent, CardFooter } from '../../components/ui/card';\nimport Button from '../../components/ui/button';\nimport Input from '../../components/ui/input';\n\nconst Wallet = () => {\n  const [showInput, setShowInput] = useState(false);\n  const [paymentAmount, setPaymentAmount] = useState('');\n  const [showPaymentPreview, setShowPaymentPreview] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [copiedAccount, setCopiedAccount] = useState(null);\n  const [showAllTransactions, setShowAllTransactions] = useState(false);\n  const { user } = useAuth();\n  const { walletBalance, fundWallet, getRecentTransactions } = useTransactions();\n  const transactions = getRecentTransactions(5);\n  const transactionCharge = 50.0;\n  const { isDarkMode } = useDarkMode();\n\n  const handlePayment = () => {\n    const amount = parseFloat(paymentAmount);\n    if (isNaN(amount) || amount <= 0) {\n      setError('Please enter a valid amount greater than zero.');\n      return;\n    }\n    setError('');\n    setShowPaymentPreview(true);\n  };\n\n  const copyToClipboard = async (text, accountIndex) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      setCopiedAccount(accountIndex);\n      setTimeout(() => setCopiedAccount(null), 2000);\n    } catch (err) {\n      console.error('Failed to copy:', err);\n    }\n  };\n\n  const confirmPayment = async () => {\n    setIsLoading(true);\n    const amount = parseFloat(paymentAmount);\n    try {\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n      fundWallet(amount, 'card');\n      setPaymentAmount('');\n      setShowInput(false);\n      setShowPaymentPreview(false);\n      setSuccessMessage(`Payment successful! Your wallet has been credited with ₦${amount.toLocaleString()}.`);\n      setTimeout(() => setSuccessMessage(''), 5000);\n    } catch (err) {\n      setError('Payment failed. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: { opacity: 1, transition: { staggerChildren: 0.1 } },\n  };\n\n  const cardVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: { opacity: 1, y: 0 },\n  };\n\n  return (\n    <div className={`min-h-screen p-6 transition-colors duration-200 ${\n      isDarkMode ? 'bg-dark-surface text-dark-text-primary' : 'bg-gray-50 text-gray-800'\n    }`}>\n      <div className=\"mx-auto max-w-6xl space-y-6\">\n        <AnimatePresence>\n          {successMessage && (\n            <motion.div\n              initial={{ opacity: 0, y: -20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              className={`px-6 py-4 rounded-xl mb-6 flex items-center justify-between ${\n                isDarkMode \n                  ? 'bg-green-900/30 border border-green-800 text-green-400' \n                  : 'bg-green-50 border border-green-200/50 text-green-700'\n              }`}\n            >\n              <div className=\"flex items-center\">\n                <FiCheck className=\"w-5 h-5 mr-2\" />\n                {successMessage}\n              </div>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => setSuccessMessage('')}\n                className={isDarkMode ? 'hover:bg-green-800/30' : 'hover:bg-green-100'}\n              >\n                <FiX className=\"w-5 h-5\" />\n              </Button>\n            </motion.div>\n          )}\n        </AnimatePresence>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          <Card className={isDarkMode ? 'bg-dark-surface-secondary border-dark-border' : ''}>\n            <CardHeader>\n              <CardTitle className=\"flex items-center\">\n                <FiDollarSign className=\"w-6 h-6 mr-2 text-green-500\" />\n                Wallet Details\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              <motion.div\n                whileHover={{ scale: 1.02 }}\n                className={`relative overflow-hidden p-8 rounded-2xl text-white shadow-lg border ${\n                  isDarkMode \n                    ? 'bg-gradient-to-r from-green-600 to-green-700 border-green-600' \n                    : 'bg-gradient-to-r from-green-500 to-green-600 border-green-400/20'\n                }`}\n              >\n                <div className=\"absolute top-0 right-0 w-32 h-32 transform translate-x-16 -translate-y-16\">\n                  <div className=\"absolute inset-0 bg-white/10 rounded-full blur-3xl\"></div>\n                </div>\n                <div className=\"relative z-10\">\n                  <p className=\"text-green-100 text-sm font-medium uppercase tracking-wider mb-2\">Available Balance</p>\n                  <p className=\"text-5xl font-bold mb-6 tracking-tight\">₦{(walletBalance || 0).toLocaleString()}</p>\n                  <div className=\"flex items-center text-green-100 text-sm bg-white/10 w-fit px-3 py-1.5 rounded-full\">\n                    <FiClock className=\"w-4 h-4 mr-2\" />\n                    Last updated: {new Date().toLocaleTimeString()}\n                  </div>\n                </div>\n              </motion.div>\n\n              <div className=\"space-y-4\">\n                <Button\n                  variant={showInput ? \"outline\" : \"success\"}\n                  className=\"w-full\"\n                  onClick={() => setShowInput(!showInput)}\n                >\n                  {showInput ? (\n                    <>\n                      <FiX className=\"w-4 h-4 mr-2\" />\n                      Cancel Payment\n                    </>\n                  ) : (\n                    <>\n                      <FiCreditCard className=\"w-4 h-4 mr-2\" />\n                      Add Money to Wallet\n                    </>\n                  )}\n                </Button>\n\n                {showInput && (\n                  <div className=\"space-y-3\">\n                    <div className=\"relative\">\n                      <div className=\"absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none\">\n                        <span className={`text-gray-500 ${\n                          isDarkMode ? 'text-dark-text-secondary' : ''\n                        }`}>₦</span>\n                      </div>\n                      <Input\n                        type=\"number\"\n                        value={paymentAmount}\n                        onChange={(e) => setPaymentAmount(e.target.value)}\n                        placeholder=\"0.00\"\n                        className={`pl-8 text-lg font-medium ${\n                          error \n                            ? isDarkMode\n                              ? 'border-red-500 bg-red-900/20 text-red-400'\n                              : 'border-red-500 bg-red-50 text-red-900'\n                            : isDarkMode\n                              ? 'border-gray-700 bg-gray-800 text-gray-100 placeholder-gray-500'\n                              : ''\n                        }`}\n                        min=\"1\"\n                        disabled={isLoading}\n                      />\n                    </div>\n                    {error && (\n                      <p className={`text-xs ${\n                        isDarkMode ? 'text-red-400' : 'text-red-500'\n                      }`}>{error}</p>\n                    )}\n                    <Button\n                      variant=\"success\"\n                      className=\"w-full\"\n                      onClick={handlePayment}\n                      disabled={isLoading}\n                    >\n                      {isLoading ? (\n                        <div className=\"flex items-center gap-2\">\n                          <div className=\"w-4 h-4 border-2 border-white/30 border-t-white rounded-full animate-spin\"></div>\n                          Processing...\n                        </div>\n                      ) : (\n                        <>\n                          <FiCreditCard className=\"w-4 h-4 mr-2\" />\n                          Submit Payment\n                        </>\n                      )}\n                    </Button>\n                  </div>\n                )}\n              </div>\n\n              <Card className={`${\n                isDarkMode \n                  ? 'bg-yellow-900/30 border-yellow-800 text-yellow-400' \n                  : 'bg-gradient-to-r from-yellow-50 to-amber-50 border-yellow-100/50'\n              }`}>\n                <CardContent className=\"flex items-start gap-3\">\n                  <div className={`p-2 rounded-lg ${\n                    isDarkMode ? 'bg-yellow-800' : 'bg-yellow-100'\n                  }`}>\n                    <FiCreditCard className={`w-4 h-4 ${\n                      isDarkMode ? 'text-yellow-400' : 'text-yellow-700'\n                    }`} />\n                  </div>\n                  <div>\n                    <p className={`text-sm font-medium mb-1 ${\n                      isDarkMode ? 'text-yellow-400' : 'text-yellow-800'\n                    }`}>Transaction Fee Notice</p>\n                    <p className={`text-sm ${\n                      isDarkMode ? 'text-yellow-500' : 'text-yellow-700/90'\n                    }`}>\n                      A service charge of <strong className={\n                        isDarkMode ? 'text-yellow-400' : 'text-yellow-900'\n                      }>₦{transactionCharge.toFixed(2)}</strong> will be applied to bank transfers.\n                    </p>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <div className=\"space-y-4\">\n                {[\n                  { name: 'Mic', number: '7324484567', bank: 'Werna Bank' },\n                  { name: 'Mic', number: '5025249620', bank: 'Sterling Bank' },\n                ].map((account, index) => (\n                  <Card\n                    key={index}\n                    className={`transition-all duration-200 ${\n                      isDarkMode \n                        ? 'bg-dark-surface border-dark-border hover:bg-dark-surface-tertiary' \n                        : 'hover:bg-gray-50'\n                    }`}\n                  >\n                    <CardContent className=\"flex justify-between items-start\">\n                      <div>\n                        <p className={`font-medium ${\n                          isDarkMode ? 'text-dark-text-primary' : 'text-gray-700'\n                        }`}>{account.bank}</p>\n                        <p className={`text-sm mt-1 ${\n                          isDarkMode ? 'text-dark-text-secondary' : 'text-gray-600'\n                        }`}><strong>Name:</strong> {account.name}</p>\n                        <p className={`text-sm ${\n                          isDarkMode ? 'text-dark-text-secondary' : 'text-gray-600'\n                        }`}><strong>Number:</strong> {account.number}</p>\n                      </div>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        onClick={() => copyToClipboard(account.number, index)}\n                        className={\n                          isDarkMode \n                            ? 'text-dark-text-secondary hover:text-primary-400' \n                            : 'text-green-500 hover:text-green-600'\n                        }\n                        title=\"Copy account number\"\n                      >\n                        {copiedAccount === index ? (\n                          <FiCheck className=\"w-5 h-5\" />\n                        ) : (\n                          <FiClipboard className=\"w-5 h-5\" />\n                        )}\n                      </Button>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card className={isDarkMode ? 'bg-dark-surface-secondary border-dark-border' : ''}>\n            <CardHeader>\n              <CardTitle className=\"flex items-center\">\n                <FiClock className=\"w-6 h-6 mr-2 text-green-500\" />\n                Recent Transactions\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              <Card className={isDarkMode ? 'bg-dark-surface border-dark-border' : 'bg-gray-50'}>\n                <CardContent>\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className={`text-sm font-medium ${\n                        isDarkMode ? 'text-dark-text-secondary' : 'text-gray-600'\n                      }`}>Last Transaction</p>\n                      <p className=\"text-3xl font-bold text-green-500 mt-1\">\n                        ₦{transactions[0]?.amount.toFixed(2) || '0.00'}\n                      </p>\n                    </div>\n                    <div className={`p-3 rounded-xl ${\n                      transactions[0]?.type === 'credit' \n                        ? isDarkMode ? 'bg-green-900/30 text-green-400' : 'bg-green-100'\n                        : isDarkMode ? 'bg-red-900/30 text-red-400' : 'bg-red-100'\n                    }`}>\n                      {transactions[0]?.type === 'credit' ? (\n                        <FiArrowDown className=\"w-6 h-6\" />\n                      ) : (\n                        <FiArrowUp className=\"w-6 h-6\" />\n                      )}\n                    </div>\n                  </div>\n                  {transactions[0] && (\n                    <p className={`text-xs mt-2 ${\n                      isDarkMode ? 'text-dark-text-secondary' : 'text-gray-500'\n                    }`}>\n                      {new Date(transactions[0].date).toLocaleDateString('en-US', { \n                        month: 'long', \n                        day: 'numeric', \n                        year: 'numeric',\n                        hour: '2-digit',\n                        minute: '2-digit'\n                      })}\n                    </p>\n                  )}\n                </CardContent>\n              </Card>\n\n              <div className=\"space-y-3\">\n                {transactions.map((transaction) => (\n                  <Card\n                    key={transaction.id}\n                    className={`transition-all duration-200 ${\n                      isDarkMode \n                        ? 'bg-dark-surface border-dark-border hover:bg-dark-surface-tertiary' \n                        : 'hover:bg-gray-50'\n                    }`}\n                  >\n                    <CardContent className=\"flex justify-between items-center\">\n                      <div className=\"flex items-center\">\n                        <div className={`w-10 h-10 rounded-xl flex items-center justify-center mr-4 ${\n                          transaction.type === 'credit' \n                            ? isDarkMode ? 'bg-green-900/30 text-green-400' : 'bg-green-100 text-green-600'\n                            : isDarkMode ? 'bg-red-900/30 text-red-400' : 'bg-red-100 text-red-600'\n                        }`}>\n                          {transaction.type === 'credit' ? (\n                            <FiArrowDown className=\"w-5 h-5\" />\n                          ) : (\n                            <FiArrowUp className=\"w-5 h-5\" />\n                          )}\n                        </div>\n                        <div>\n                          <p className={`font-medium ${\n                            isDarkMode ? 'text-dark-text-primary' : 'text-gray-700'\n                          }`}>{transaction.label}</p>\n                          <p className={`text-xs ${\n                            isDarkMode ? 'text-dark-text-secondary' : 'text-gray-500'\n                          }`}>{new Date(transaction.date).toLocaleDateString()}</p>\n                        </div>\n                      </div>\n                      <p className={`text-sm font-semibold ${\n                        transaction.type === 'credit'\n                          ? isDarkMode ? 'text-green-400' : 'text-green-600'\n                          : isDarkMode ? 'text-red-400' : 'text-red-600'\n                      }`}>\n                        {transaction.type === 'credit' ? '+' : '-'} ₦{Math.abs(transaction.amount).toFixed(2)}\n                      </p>\n                    </CardContent>\n                  </Card>\n                ))}\n                {transactions.length === 0 && (\n                  <p className={`text-center text-sm ${\n                    isDarkMode ? 'text-dark-text-secondary' : 'text-gray-500'\n                  }`}>No recent transactions</p>\n                )}\n              </div>\n\n              <Button\n                variant=\"success\"\n                className=\"w-full\"\n                onClick={() => setShowAllTransactions(!showAllTransactions)}\n              >\n                <FiClock className=\"w-4 h-4 mr-2\" />\n                {showAllTransactions ? 'Show Less' : 'View All Transactions'}\n              </Button>\n            </CardContent>\n          </Card>\n        </div>\n\n        <AnimatePresence>\n          {showPaymentPreview && (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\"\n              onClick={() => setShowPaymentPreview(false)}\n            >\n              <Card\n                className={`w-full max-w-md ${\n                  isDarkMode ? 'bg-dark-surface border-dark-border' : ''\n                }`}\n                onClick={(e) => e.stopPropagation()}\n              >\n                <CardHeader>\n                  <CardTitle>Payment Details</CardTitle>\n                  <CardDescription>Review your transaction details</CardDescription>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"absolute top-4 right-4\"\n                    onClick={() => setShowPaymentPreview(false)}\n                  >\n                    <FiX className=\"w-5 h-5\" />\n                  </Button>\n                </CardHeader>\n\n                <CardContent className=\"space-y-6\">\n                  <Card className={isDarkMode ? 'bg-dark-surface border-dark-border' : 'bg-gray-50'}>\n                    <CardContent className=\"space-y-4\">\n                      <div className=\"flex items-center justify-between\">\n                        <p className={`text-sm font-medium ${\n                          isDarkMode ? 'text-dark-text-primary' : 'text-green-800'\n                        }`}>Amount to Deposit</p>\n                        <div className={`px-4 py-2 rounded-lg ${\n                          isDarkMode \n                            ? 'bg-dark-surface-secondary border border-dark-border' \n                            : 'bg-white border border-green-200'\n                        }`}>\n                          <p className={`text-lg font-bold ${\n                            isDarkMode ? 'text-dark-text-primary' : 'text-green-600'\n                          }`}>₦{parseFloat(paymentAmount || 0).toFixed(2)}</p>\n                        </div>\n                      </div>\n                      \n                      <div className={`flex items-center justify-between text-sm ${\n                        isDarkMode ? 'text-dark-text-secondary' : 'text-green-700'\n                      }`}>\n                        <p>Service Charge</p>\n                        <p className=\"font-medium\">₦{transactionCharge.toFixed(2)}</p>\n                      </div>\n                      \n                      <div className={`h-px ${\n                        isDarkMode ? 'bg-dark-border' : 'bg-green-200'\n                      }`}></div>\n                      \n                      <div className=\"flex items-center justify-between\">\n                        <p className={`text-sm font-medium ${\n                          isDarkMode ? 'text-dark-text-primary' : 'text-green-800'\n                        }`}>Total Amount to Pay</p>\n                        <p className={`text-lg font-bold ${\n                          isDarkMode ? 'text-dark-text-primary' : 'text-green-600'\n                        }`}>₦{(parseFloat(paymentAmount || 0) + transactionCharge).toFixed(2)}</p>\n                      </div>\n                    </CardContent>\n                  </Card>\n\n                  <Card className={isDarkMode ? 'bg-dark-surface border-dark-border' : 'bg-gray-50'}>\n                    <CardContent className=\"space-y-3\">\n                      <div className=\"flex justify-between\">\n                        <p className={`text-sm ${\n                          isDarkMode ? 'text-dark-text-secondary' : 'text-gray-500'\n                        }`}>Transaction ID</p>\n                        <p className={`text-sm font-medium ${\n                          isDarkMode ? 'text-dark-text-primary' : 'text-gray-900'\n                        }`}>AG-{Date.now()}-HAW1M</p>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <p className={`text-sm ${\n                          isDarkMode ? 'text-dark-text-secondary' : 'text-gray-500'\n                        }`}>Date</p>\n                        <p className={`text-sm font-medium ${\n                          isDarkMode ? 'text-dark-text-primary' : 'text-gray-900'\n                        }`}>{new Date().toLocaleString()}</p>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <p className={`text-sm ${\n                          isDarkMode ? 'text-dark-text-secondary' : 'text-gray-500'\n                        }`}>Payment Method</p>\n                        <div className=\"flex items-center gap-1.5\">\n                          <FiCreditCard className={`w-4 h-4 ${\n                            isDarkMode ? 'text-dark-text-secondary' : 'text-gray-600'\n                          }`} />\n                          <p className={`text-sm font-medium ${\n                            isDarkMode ? 'text-dark-text-primary' : 'text-gray-900'\n                          }`}>Card Payment</p>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                </CardContent>\n\n                <CardFooter className=\"flex gap-4\">\n                  <Button\n                    variant=\"outline\"\n                    className=\"flex-1\"\n                    onClick={() => setShowPaymentPreview(false)}\n                    disabled={isLoading}\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    variant=\"success\"\n                    className=\"flex-1\"\n                    onClick={confirmPayment}\n                    disabled={isLoading}\n                  >\n                    {isLoading ? (\n                      <div className=\"flex items-center gap-2\">\n                        <div className=\"w-4 h-4 border-2 border-white/30 border-t-white rounded-full animate-spin\"></div>\n                        Processing...\n                      </div>\n                    ) : (\n                      'Confirm Payment'\n                    )}\n                  </Button>\n                </CardFooter>\n              </Card>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </div>\n    </div>\n  );\n};\n\nexport default Wallet;","import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                // clean up the exiting children map\n                exitingChildren.delete(key);\n                // compute the keys of children that were rendered once but are no longer present\n                // this could happen in case of too many fast consequent renderings\n                // @link https://github.com/framer/motion/issues/2023\n                const leftOverKeys = Array.from(allChildren.keys()).filter((childKey) => !targetKeys.includes(childKey));\n                // clean up the all children map\n                leftOverKeys.forEach((leftOverKey) => allChildren.delete(leftOverKey));\n                // make sure to render only the children that are actually visible\n                presentChildren.current = filteredChildren.filter((presentChild) => {\n                    const presentChildKey = getChildKey(presentChild);\n                    return (\n                    // filter out the node exiting\n                    presentChildKey === key ||\n                        // filter out the leftover children\n                        leftOverKeys.includes(presentChildKey));\n                });\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exitingChildren.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n"],"names":["Button","React","_ref","ref","className","variant","size","asChild","props","_objectWithoutProperties","_excluded","Comp","Slot","_jsx","_objectSpread","cn","displayName","Card","CardHeader","_ref2","_excluded2","CardTitle","_ref3","_excluded3","CardDescription","_ref4","_excluded4","CardContent","_ref5","_excluded5","CardFooter","_ref6","_excluded6","Input","type","_len","arguments","length","inputs","Array","_key","twMerge","clsx","Wallet","_transactions$","_transactions$2","_transactions$3","showInput","setShowInput","useState","paymentAmount","setPaymentAmount","showPaymentPreview","setShowPaymentPreview","isLoading","setIsLoading","error","setError","successMessage","setSuccessMessage","copiedAccount","setCopiedAccount","showAllTransactions","setShowAllTransactions","user","useAuth","walletBalance","fundWallet","getRecentTransactions","useTransactions","transactions","isDarkMode","useDarkMode","concat","children","_jsxs","AnimatePresence","motion","div","initial","opacity","y","animate","exit","FiCheck","onClick","FiX","FiDollarSign","whileHover","scale","toLocaleString","FiClock","Date","toLocaleTimeString","_Fragment","FiCreditCard","value","onChange","e","target","placeholder","min","disabled","handlePayment","amount","parseFloat","isNaN","toFixed","name","number","bank","map","account","index","async","text","accountIndex","navigator","clipboard","writeText","setTimeout","err","console","copyToClipboard","title","FiClipboard","FiArrowDown","FiArrowUp","date","toLocaleDateString","month","day","year","hour","minute","transaction","label","Math","abs","id","stopPropagation","now","Promise","resolve","useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","getSnapshotBeforeUpdate","prevProps","element","this","childRef","isPresent","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","PopChild","useId","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","PresenceChild","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","isComplete","values","register","delete","undefined","forEach","_","key","PresenceContext","Provider","Map","getChildKey","child","exitBeforeEnter","invariant","forceRender","useContext","LayoutGroupContext","forcedRenderCount","setForcedRenderCount","useCallback","frame","postRender","useForceUpdate","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exitingChildren","presentChildren","allChildren","isInitialRender","callback","updateChildLookup","clear","useEffect","presentKeys","targetKeys","numPresent","i","indexOf","has","component","get","insertionIndex","exitingComponent","onExit","leftOverKeys","from","keys","filter","childKey","includes","leftOverKey","presentChild","presentChildKey","splice","cloneElement"],"sourceRoot":""}