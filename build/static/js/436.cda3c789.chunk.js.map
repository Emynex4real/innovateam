{"version":3,"file":"static/js/436.cda3c789.chunk.js","mappings":"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","sources":["hooks/useJambTransaction.js","../node_modules/@heroicons/react/24/outline/esm/KeyIcon.js","../node_modules/@heroicons/react/24/outline/esm/ShoppingCartIcon.js","pages/jamb services/pin vending/index.jsx","../node_modules/@heroicons/react/24/outline/esm/ArrowPathIcon.js","../node_modules/@heroicons/react/24/outline/esm/WalletIcon.js"],"sourcesContent":["import { useTransactions } from '../contexts/TransactionContext';\nimport { toast } from 'react-toastify';\n\nexport const useJambTransaction = () => {\n  const { addTransaction, walletBalance } = useTransactions();\n\n  const processJambTransaction = async (params) => {\n    const {\n      amount,\n      serviceType,\n      description,\n      quantity = 1,\n      profileCode = null,\n      fullName = null,\n    } = params;\n\n    if (!amount || !serviceType) {\n      toast.error('Invalid transaction parameters');\n      return { success: false, error: 'Invalid parameters' };\n    }\n\n    if (walletBalance < amount) {\n      toast.error('Insufficient wallet balance');\n      return { success: false, error: 'Insufficient balance' };\n    }\n\n    try {\n      // Process the transaction\n      addTransaction({\n        label: `JAMB ${serviceType}`,\n        description: description || `${serviceType} - ${quantity} unit(s)${profileCode ? ` - ${profileCode}` : ''}${fullName ? ` for ${fullName}` : ''}`,\n        amount: amount,\n        type: 'debit',\n        category: 'jamb',\n        status: 'Successful',\n        metadata: {\n          serviceType,\n          quantity,\n          profileCode,\n          fullName,\n        }\n      });\n\n      toast.success('Transaction successful');\n      return { success: true };\n    } catch (error) {\n      console.error('Transaction failed:', error);\n      toast.error('Transaction failed. Please try again.');\n      return { success: false, error: error.message };\n    }\n  };\n\n  return { processJambTransaction, walletBalance };\n};\n","import * as React from \"react\";\nfunction KeyIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15.75 5.25a3 3 0 0 1 3 3m3 0a6 6 0 0 1-7.029 5.912c-.563-.097-1.159.026-1.563.43L10.5 17.25H8.25v2.25H6v2.25H2.25v-2.818c0-.597.237-1.17.659-1.591l6.499-6.499c.404-.404.527-1 .43-1.563A6 6 0 1 1 21.75 8.25Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(KeyIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ShoppingCartIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M2.25 3h1.386c.51 0 .955.343 1.087.835l.383 1.437M7.5 14.25a3 3 0 0 0-3 3h15.75m-12.75-3h11.218c1.121-2.3 2.1-4.684 2.924-7.138a60.114 60.114 0 0 0-16.536-1.84M7.5 14.25 5.106 5.272M6 20.25a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Zm12.75 0a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ShoppingCartIcon);\nexport default ForwardRef;","import React, { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { KeyIcon, WalletIcon, ArrowPathIcon, ShoppingCartIcon } from '@heroicons/react/24/outline';\nimport { useJambTransaction } from '../../../hooks/useJambTransaction';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useDarkMode } from '../../../contexts/DarkModeContext';\n\nconst JambPinVending = () => {\n  const [type, setType] = useState('');\n  const [quantity, setQuantity] = useState(1);\n  const [amount, setAmount] = useState(0); // Default amount is 0 until a type is selected\n  const [isLoading, setIsLoading] = useState(false);\n  const { processJambTransaction, walletBalance } = useJambTransaction();\n  const { isDarkMode } = useDarkMode();\n\n  const handleTypeChange = (e) => {\n    const selectedType = e.target.value;\n    setType(selectedType);\n    // Update amount based on the selected type and quantity\n    if (selectedType === \"7150\") {\n      setAmount(quantity * 7150);\n    } else if (selectedType === \"8650\") {\n      setAmount(quantity * 8650);\n    } else {\n      setAmount(0); // Reset amount if no type is selected\n    }\n  };\n\n  const handleQuantityChange = (e) => {\n    const newQuantity = parseInt(e.target.value, 10);\n    setQuantity(newQuantity);\n    // Update amount based on the selected type and new quantity\n    if (type === \"7150\") {\n      setAmount(newQuantity * 7150);\n    } else if (type === \"8650\") {\n      setAmount(newQuantity * 8650);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!type) {\n      toast.error('Please select a type');\n      return;\n    }\n\n    if (amount > walletBalance) {\n      toast.error('Insufficient wallet balance!', {\n        description: `Required: ₦${amount.toLocaleString()}, Balance: ₦${walletBalance.toLocaleString()}`,\n        duration: 5000,\n      });\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      const result = await processJambTransaction({\n        amount: amount,\n        serviceType: 'JAMB Pin',\n        description: `${type === '7150' ? 'UTME ONLY' : 'UTME WITH MOCK'} Pin`,\n        quantity: quantity,\n      });\n\n      if (result.success) {\n        toast.success('Transaction successful!', {\n          description: `Amount: ₦${amount.toLocaleString()}, Type: ${type === '7150' ? 'UTME ONLY' : 'UTME WITH MOCK'}, Quantity: ${quantity}`,\n          duration: 5000,\n        });\n        // Reset form\n        setType('');\n        setQuantity(1);\n        setAmount(0);\n      }\n    } catch (error) {\n      toast.error('Transaction failed', {\n        description: 'Please try again or contact support if the issue persists.',\n        duration: 5000,\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className={`min-h-screen py-6 font-nunito transition-colors duration-200 ${\n      isDarkMode ? 'bg-dark-surface text-dark-text-primary' : 'bg-gray-50'\n    }`}>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme={isDarkMode ? \"dark\" : \"light\"}\n      />\n      <div className=\"container mx-auto px-4\">\n        <div className=\"flex items-center gap-4 mb-8\">\n          <div className={`p-3 ${\n            isDarkMode ? 'bg-green-900/30' : 'bg-green-100'\n          } rounded-full`}>\n            <KeyIcon className={`w-6 h-6 ${\n              isDarkMode ? 'text-green-400' : 'text-green-600'\n            }`} />\n          </div>\n          <h1 className={`text-2xl md:text-3xl font-bold ${\n            isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\n          }`}>JAMB Pin Vending</h1>\n        </div>\n\n        <div className=\"flex flex-col md:flex-row gap-6\">\n          {/* JAMB PIN Vending Form */}\n          <div className={`flex-1 ${\n            isDarkMode ? 'bg-dark-surface-secondary border-dark-border' : 'bg-white'\n          } p-6 rounded-xl shadow-md border`}>\n            <div className=\"flex items-center gap-3 mb-6\">\n              <ShoppingCartIcon className={`w-6 h-6 ${\n                isDarkMode ? 'text-green-400' : 'text-green-600'\n              }`} />\n              <h2 className={`text-lg font-bold ${\n                isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\n              }`}>Pin Details</h2>\n            </div>\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\n              <div className=\"mb-4\">\n                <label className={`block text-sm font-medium mb-1 ${\n                  isDarkMode ? 'text-dark-text-primary' : 'text-gray-700'\n                }`}>Type</label>\n                <select\n                  value={type}\n                  onChange={handleTypeChange}\n                  className={`mt-1 block w-full p-2 border rounded-md focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200 ${\n                    isDarkMode \n                      ? 'bg-dark-surface border-dark-border text-dark-text-primary' \n                      : 'border-gray-300'\n                  }`}\n                >\n                  <option value=\"\">Select Type</option>\n                  <option value=\"7150\">UTME ONLY (₦7,150)</option>\n                  <option value=\"8650\">UTME WITH MOCK (₦8,650)</option>\n                </select>\n              </div>\n\n              <div className=\"mb-4\">\n                <label className={`block text-sm font-medium mb-1 ${\n                  isDarkMode ? 'text-dark-text-primary' : 'text-gray-700'\n                }`}>Quantity</label>\n                <select\n                  value={quantity}\n                  onChange={handleQuantityChange}\n                  className={`mt-1 block w-full p-2 border rounded-md focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200 ${\n                    isDarkMode \n                      ? 'bg-dark-surface border-dark-border text-dark-text-primary' \n                      : 'border-gray-300'\n                  }`}\n                >\n                  <option value=\"1\">1</option>\n                  <option value=\"2\">2</option>\n                  <option value=\"3\">3</option>\n                  <option value=\"4\">4</option>\n                  <option value=\"5\">5</option>\n                </select>\n              </div>\n\n              <div>\n                <label className={`block text-sm font-semibold mb-1 ${\n                  isDarkMode ? 'text-dark-text-primary' : 'text-gray-700'\n                }`}>Amount</label>\n                <div className=\"relative\">\n                  <input\n                    type=\"text\"\n                    value={`₦${amount}`}\n                    readOnly\n                    className={`w-full pl-12 pr-4 py-3 border rounded-xl cursor-not-allowed ${\n                      isDarkMode \n                        ? 'bg-dark-surface border-dark-border text-dark-text-primary' \n                        : 'bg-gray-100 border-gray-300 text-gray-700'\n                    }`}\n                  />\n                  <div className=\"absolute left-4 top-1/2 -translate-y-1/2\">\n                    <WalletIcon className={`w-5 h-5 ${\n                      isDarkMode ? 'text-dark-text-secondary' : 'text-gray-400'\n                    }`} />\n                  </div>\n                </div>\n                <p className={`mt-2 text-sm ${\n                  isDarkMode ? 'text-dark-text-secondary' : 'text-gray-500'\n                }`}>\n                  Wallet Balance: <span className={`font-medium ${\n                    isDarkMode ? 'text-dark-text-primary' : 'text-gray-700'\n                  }`}>₦{walletBalance.toLocaleString()}</span>\n                </p>\n              </div>\n\n              <button\n                type=\"submit\"\n                disabled={isLoading || !type}\n                className={`w-full py-3 px-6 rounded-xl font-semibold transition-all duration-300 flex items-center justify-center gap-2 ${\n                  isDarkMode\n                    ? 'bg-green-600 hover:bg-green-700 text-white'\n                    : 'bg-green-500 hover:bg-green-600 text-white'\n                } disabled:opacity-50 disabled:cursor-not-allowed`}\n              >\n                {isLoading ? (\n                  <>\n                    <ArrowPathIcon className=\"w-5 h-5 animate-spin\" />\n                    Processing...\n                  </>\n                ) : (\n                  <>\n                    <ShoppingCartIcon className=\"w-5 h-5\" />\n                    Proceed\n                  </>\n                )}\n              </button>\n            </form>\n          </div>\n\n          {/* How It Works Section */}\n          <div className={`flex-1 ${\n            isDarkMode ? 'bg-dark-surface-secondary border-dark-border' : 'bg-white'\n          } p-6 rounded-xl shadow-md border`}>\n            <div className=\"flex items-center gap-3 mb-6\">\n              <KeyIcon className={`w-6 h-6 ${\n                isDarkMode ? 'text-green-400' : 'text-green-600'\n              }`} />\n              <h2 className={`text-lg font-bold ${\n                isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\n              }`}>How It Works</h2>\n            </div>\n            <ul className={`list-disc list-inside ${\n              isDarkMode ? 'text-dark-text-secondary' : 'text-gray-600'\n            }`}>\n              <li>Fill the form with your accurate details and submit</li>\n              <li>Click the \"Proceed\" button to make payment for the service</li>\n              <li>Upon successful payment, scroll down for new entry. Click on new entry to submit fresh job.</li>\n              <li>Once your Job is done, you will be sent a confirmation email and you will be able to print out your processed job.</li>\n            </ul>\n          </div>\n        </div>\n\n        {/* JAMB PIN Vending History */}\n        <div className=\"mt-8\">\n          <h2 className={`text-xl font-bold mb-4 ${\n            isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\n          }`}>JAMB PIN VENDING HISTORY</h2>\n          <div className={`${\n            isDarkMode ? 'bg-dark-surface-secondary border-dark-border' : 'bg-white'\n          } p-6 rounded-lg shadow-md overflow-x-auto border`}>\n            <table className=\"min-w-full\">\n              <thead>\n                <tr>\n                  <th className={`px-4 py-2 ${\n                    isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\n                  }`}>Action</th>\n                  <th className={`px-4 py-2 ${\n                    isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\n                  }`}>Type</th>\n                  <th className={`px-4 py-2 ${\n                    isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\n                  }`}>Fullname</th>\n                  <th className={`px-4 py-2 ${\n                    isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\n                  }`}>Profile Code/RegNo.</th>\n                  <th className={`px-4 py-2 ${\n                    isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\n                  }`}>Status</th>\n                  <th className={`px-4 py-2 ${\n                    isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\n                  }`}>Screenshot</th>\n                  <th className={`px-4 py-2 ${\n                    isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\n                  }`}>Remark</th>\n                  <th className={`px-4 py-2 ${\n                    isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\n                  }`}>Submitted On</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td colSpan=\"8\" className={`text-center py-4 ${\n                    isDarkMode ? 'text-dark-text-secondary' : 'text-gray-500'\n                  }`}>No Record Found!</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default JambPinVending;","import * as React from \"react\";\nfunction ArrowPathIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0 3.181 3.183a8.25 8.25 0 0 0 13.803-3.7M4.031 9.865a8.25 8.25 0 0 1 13.803-3.7l3.181 3.182m0-4.991v4.99\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowPathIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction WalletIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M21 12a2.25 2.25 0 0 0-2.25-2.25H15a3 3 0 1 1-6 0H5.25A2.25 2.25 0 0 0 3 12m18 0v6a2.25 2.25 0 0 1-2.25 2.25H5.25A2.25 2.25 0 0 1 3 18v-6m18 0V9M3 12V9m18 0a2.25 2.25 0 0 0-2.25-2.25H5.25A2.25 2.25 0 0 0 3 9m18 0V6a2.25 2.25 0 0 0-2.25-2.25H5.25A2.25 2.25 0 0 0 3 6v3\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(WalletIcon);\nexport default ForwardRef;"],"names":["useJambTransaction","addTransaction","walletBalance","useTransactions","processJambTransaction","async","amount","serviceType","description","quantity","profileCode","fullName","params","toast","error","success","label","concat","type","category","status","metadata","console","message","KeyIcon","_ref","svgRef","title","titleId","props","_objectWithoutProperties","_excluded","React","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","ShoppingCartIcon","JambPinVending","setType","useState","setQuantity","setAmount","isLoading","setIsLoading","isDarkMode","useDarkMode","_jsxs","className","children","_jsx","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","onSubmit","e","preventDefault","toLocaleString","duration","value","onChange","selectedType","target","newQuantity","parseInt","readOnly","WalletIcon","disabled","_Fragment","ArrowPathIcon","colSpan"],"sourceRoot":""}