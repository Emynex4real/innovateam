{"version":3,"file":"static/js/10.2d125dd8.chunk.js","mappings":"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","sources":["../node_modules/@heroicons/react/24/outline/esm/CheckIcon.js","../node_modules/@heroicons/react/24/outline/esm/ClipboardIcon.js","pages/result checker/nabteb result checker/index.jsx"],"sourcesContent":["import * as React from \"react\";\nfunction CheckIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m4.5 12.75 6 6 9-13.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CheckIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ClipboardIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15.666 3.888A2.25 2.25 0 0 0 13.5 2.25h-3c-1.03 0-1.9.693-2.166 1.638m7.332 0c.055.194.084.4.084.612v0a.75.75 0 0 1-.75.75H9a.75.75 0 0 1-.75-.75v0c0-.212.03-.418.084-.612m7.332 0c.646.049 1.288.11 1.927.184 1.1.128 1.907 1.077 1.907 2.185V19.5a2.25 2.25 0 0 1-2.25 2.25H6.75A2.25 2.25 0 0 1 4.5 19.5V6.257c0-1.108.806-2.057 1.907-2.185a48.208 48.208 0 0 1 1.927-.184\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ClipboardIcon);\nexport default ForwardRef;","import React, { useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { ClipboardIcon, CheckIcon } from '@heroicons/react/24/outline';\r\nimport { useTransactions } from '../../../contexts/TransactionContext';\r\nimport { useDarkMode } from '../../../contexts/DarkModeContext';\r\n\r\nconst NabtebResultChecker = () => {\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [purchasedCards, setPurchasedCards] = useState([]);\r\n  const [isPurchasing, setIsPurchasing] = useState(false);\r\n  const [notification, setNotification] = useState({ visible: false, message: '', type: '' });\r\n  const [copiedCardId, setCopiedCardId] = useState(null);\r\n  const pricePerCard = 2500;\r\n  const { isDarkMode } = useDarkMode();\r\n\r\n  const totalAmount = quantity * pricePerCard;\r\n\r\n  const handleQuantityChange = (e) => {\r\n    const selectedQuantity = parseInt(e.target.value, 10);\r\n    setQuantity(selectedQuantity);\r\n  };\r\n\r\n  const generateCard = () => {\r\n    const serial = `NAB-${Math.floor(1000 + Math.random() * 9000)}-${Math.floor(1000 + Math.random() * 9000)}-${Math.floor(1000 + Math.random() * 9000)}`;\r\n    const pin = Math.floor(100000000 + Math.random() * 900000000).toString();\r\n    return { id: Date.now() + Math.random(), serial, pin, date: new Date().toLocaleDateString('en-CA') };\r\n  };\r\n\r\n  const { makePayment, walletBalance } = useTransactions();\r\n\r\n  const handlePurchase = async () => {\r\n    setIsPurchasing(true);\r\n    setNotification({ visible: false, message: '', type: '' });\r\n\r\n    try {\r\n      // Check if user has enough balance\r\n      if (totalAmount > walletBalance) {\r\n        throw new Error('Insufficient wallet balance');\r\n      }\r\n\r\n      // Process the payment first\r\n      await makePayment(\r\n        totalAmount,\r\n        `Purchase of ${quantity} NABTEB Result Checker Card${quantity > 1 ? 's' : ''}`,\r\n        'scratch_card'\r\n      );\r\n\r\n      // Generate the cards after successful payment\r\n      const newCards = Array.from({ length: quantity }, () => generateCard());\r\n      setPurchasedCards((prev) => [...newCards, ...prev]);\r\n      \r\n      setNotification({ visible: true, message: `${quantity} NABTEB card(s) purchased successfully!`, type: 'success' });\r\n      setQuantity(1);\r\n    } catch (error) {\r\n      setNotification({ \r\n        visible: true, \r\n        message: error.message === 'Insufficient wallet balance' \r\n          ? 'Insufficient wallet balance. Please fund your wallet.'\r\n          : 'Purchase failed. Please try again.', \r\n        type: 'error' \r\n      });\r\n    } finally {\r\n      setIsPurchasing(false);\r\n      setTimeout(() => setNotification({ visible: false, message: '', type: '' }), 2500);\r\n    }\r\n  };\r\n\r\n  const copyCardDetails = (card) => {\r\n    const details = `Serial: ${card.serial}\\nPIN: ${card.pin}`;\r\n    navigator.clipboard.writeText(details);\r\n    setCopiedCardId(card.id);\r\n    setTimeout(() => setCopiedCardId(null), 2000);\r\n  };\r\n\r\n  const clearPurchasedCards = () => {\r\n    setPurchasedCards([]);\r\n    setNotification({ visible: true, message: 'Purchased cards cleared!', type: 'success' });\r\n  };\r\n\r\n  // Animation variants\r\n  const containerVariants = {\r\n    hidden: { opacity: 0 },\r\n    visible: { opacity: 1, transition: { staggerChildren: 0.05 } },\r\n  };\r\n\r\n  const cardVariants = {\r\n    hidden: { opacity: 0, y: 20 },\r\n    visible: { opacity: 1, y: 0, transition: { type: 'spring', stiffness: 120 } },\r\n  };\r\n\r\n  return (\r\n    <div className={`min-h-screen transition-colors duration-200 ${\r\n      isDarkMode ? 'bg-dark-surface text-dark-text-primary' : 'bg-gradient-to-b from-gray-50 to-white'\r\n    }`}>\r\n      <div className=\"mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.6, ease: 'easeOut' }}\r\n          className=\"mb-12\"\r\n        >\r\n          <div className=\"relative\">\r\n            <h1 className={`text-3xl md:text-4xl font-extrabold tracking-tight mb-2 relative z-10 ${\r\n              isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\r\n            }`}>NABTEB Result Checker</h1>\r\n            <p className={`text-lg relative z-10 ${\r\n              isDarkMode ? 'text-dark-text-secondary' : 'text-gray-600'\r\n            }`}>Purchase your NABTEB scratch cards securely</p>\r\n            <div className={`absolute -top-6 -left-6 w-24 h-24 rounded-full filter blur-xl opacity-60 ${\r\n              isDarkMode ? 'bg-green-900/30' : 'bg-green-100'\r\n            }`}></div>\r\n            <div className={`absolute top-10 -right-4 w-16 h-16 rounded-full filter blur-lg opacity-40 ${\r\n              isDarkMode ? 'bg-green-900/20' : 'bg-green-50'\r\n            }`}></div>\r\n          </div>\r\n        </motion.div>\r\n\r\n        {/* Notification */}\r\n        {notification.visible && (\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            exit={{ opacity: 0, y: 20 }}\r\n            className={`fixed bottom-6 right-6 px-6 py-4 rounded-xl shadow-xl backdrop-blur-sm text-white font-medium flex items-center gap-3 ${\r\n              notification.type === 'success' \r\n                ? isDarkMode ? 'bg-green-600/90' : 'bg-green-500'\r\n                : isDarkMode ? 'bg-red-600/90' : 'bg-red-500'\r\n            }`}\r\n          >\r\n            {notification.message}\r\n          </motion.div>\r\n        )}\r\n\r\n        <motion.div variants={containerVariants} initial=\"hidden\" animate=\"visible\" className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n          {/* Purchase Section */}\r\n          <motion.div variants={cardVariants} className={`p-8 rounded-2xl shadow-xl border relative overflow-hidden ${\r\n            isDarkMode ? 'bg-dark-surface-secondary border-dark-border' : 'bg-white border-gray-100'\r\n          }`}>\r\n            <div className={`absolute top-0 right-0 w-40 h-40 rounded-full filter blur-3xl opacity-30 -mr-20 -mt-20 ${\r\n              isDarkMode ? 'bg-green-900/30' : 'bg-green-50'\r\n            }`}></div>\r\n            <h2 className={`text-2xl font-semibold mb-6 ${\r\n              isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\r\n            }`}>Purchase NABTEB Scratch Cards</h2>\r\n            <div className=\"space-y-6\">\r\n              <div>\r\n                <label className={`block text-sm font-medium mb-2 ${\r\n                  isDarkMode ? 'text-dark-text-primary' : 'text-gray-700'\r\n                }`}>Select Quantity</label>\r\n                <select\r\n                  value={quantity}\r\n                  onChange={handleQuantityChange}\r\n                  className={`w-full p-4 border rounded-xl focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200 shadow-sm appearance-none ${\r\n                    isDarkMode \r\n                      ? 'bg-dark-surface border-dark-border text-dark-text-primary hover:border-dark-border-secondary' \r\n                      : 'bg-white border-gray-200 text-gray-800 hover:border-gray-300'\r\n                  }`}\r\n                  disabled={isPurchasing}\r\n                >\r\n                  {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((num) => (\r\n                    <option key={num} value={num} className={\r\n                      isDarkMode ? 'bg-dark-surface text-dark-text-primary' : ''\r\n                    }>{num}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div>\r\n                <label className={`block text-sm font-medium mb-2 ${\r\n                  isDarkMode ? 'text-dark-text-primary' : 'text-gray-700'\r\n                }`}>Total Amount</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={`₦${totalAmount.toLocaleString()}`}\r\n                  readOnly\r\n                  className={`w-full p-4 border rounded-xl font-medium cursor-not-allowed ${\r\n                    isDarkMode \r\n                      ? 'bg-dark-surface border-dark-border text-dark-text-primary' \r\n                      : 'bg-gradient-to-r from-green-50 to-green-100/30 border-gray-200 text-gray-800'\r\n                  }`}\r\n                />\r\n              </div>\r\n              <button\r\n                onClick={handlePurchase}\r\n                className={`w-full py-4 rounded-xl font-semibold transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center gap-2 shadow-lg ${\r\n                  isDarkMode\r\n                    ? 'bg-green-600 hover:bg-green-700 text-white shadow-green-900/20'\r\n                    : 'bg-gradient-to-r from-green-600 to-green-500 hover:from-green-700 hover:to-green-600 text-white shadow-green-500/20'\r\n                }`}\r\n                disabled={isPurchasing}\r\n              >\r\n                {isPurchasing ? (\r\n                  <>\r\n                    <svg className=\"animate-spin h-5 w-5\" viewBox=\"0 0 24 24\">\r\n                      <circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" fill=\"none\" className=\"opacity-25\" />\r\n                      <path fill=\"currentColor\" d=\"M4 12a8 8 0 018-8v8H4z\" className=\"opacity-75\" />\r\n                    </svg>\r\n                    Processing...\r\n                  </>\r\n                ) : (\r\n                  'Purchase Now'\r\n                )}\r\n              </button>\r\n            </div>\r\n          </motion.div>\r\n\r\n          {/* Purchased Cards Section */}\r\n          <motion.div variants={cardVariants} className={`p-8 rounded-2xl shadow-xl border relative overflow-hidden ${\r\n            isDarkMode ? 'bg-dark-surface-secondary border-dark-border' : 'bg-white border-gray-100'\r\n          }`}>\r\n            <div className={`absolute top-0 right-0 w-40 h-40 rounded-full filter blur-3xl opacity-30 -mr-20 -mt-20 ${\r\n              isDarkMode ? 'bg-green-900/30' : 'bg-green-50'\r\n            }`}></div>\r\n            <div className=\"flex justify-between items-center mb-6\">\r\n              <h2 className={`text-2xl font-semibold ${\r\n                isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\r\n              }`}>Your Purchased Cards</h2>\r\n              {purchasedCards.length > 0 && (\r\n                <button\r\n                  onClick={clearPurchasedCards}\r\n                  className={`text-sm font-medium transition-colors duration-200 ${\r\n                    isDarkMode ? 'text-red-400 hover:text-red-300' : 'text-red-600 hover:text-red-700'\r\n                  }`}\r\n                >\r\n                  Clear All\r\n                </button>\r\n              )}\r\n            </div>\r\n            <div className=\"space-y-4 max-h-[450px] overflow-y-auto pr-2 scrollbar-thin scrollbar-thumb-gray-300 scrollbar-track-gray-100\">\r\n              {purchasedCards.length === 0 ? (\r\n                <p className={`text-center py-8 ${\r\n                  isDarkMode ? 'text-dark-text-secondary' : 'text-gray-500'\r\n                }`}>No purchased cards yet. Get started by purchasing one!</p>\r\n              ) : (\r\n                purchasedCards.map((card) => (\r\n                  <motion.div\r\n                    key={card.id}\r\n                    initial={{ opacity: 0, x: -20 }}\r\n                    animate={{ opacity: 1, x: 0 }}\r\n                    whileHover={{ scale: 1.02 }}\r\n                    className={`p-5 rounded-xl shadow-md hover:shadow-lg transition-all duration-200 flex justify-between items-center border group ${\r\n                      isDarkMode \r\n                        ? 'bg-dark-surface border-dark-border hover:bg-dark-border' \r\n                        : 'bg-gradient-to-r from-gray-50 to-white border-gray-100/50'\r\n                    }`}\r\n                  >\r\n                    <div>\r\n                      <p className={`text-sm ${\r\n                        isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\r\n                      }`}><strong>Serial:</strong> {card.serial}</p>\r\n                      <p className={`text-sm ${\r\n                        isDarkMode ? 'text-dark-text-primary' : 'text-gray-800'\r\n                      }`}><strong>PIN:</strong> {card.pin}</p>\r\n                      <p className={`text-xs ${\r\n                        isDarkMode ? 'text-dark-text-secondary' : 'text-gray-600'\r\n                      }`}><strong>Date:</strong> {card.date}</p>\r\n                    </div>\r\n                    <button\r\n                      onClick={() => copyCardDetails(card)}\r\n                      className={`p-2.5 transition-all duration-200 rounded-lg group-hover:scale-110 ${\r\n                        isDarkMode \r\n                          ? 'text-dark-text-secondary hover:text-primary-400 hover:bg-dark-border' \r\n                          : 'text-gray-500 hover:text-green-600 hover:bg-green-50'\r\n                      }`}\r\n                      title=\"Copy Details\"\r\n                    >\r\n                      {copiedCardId === card.id ? (\r\n                        <CheckIcon className={`h-5 w-5 ${\r\n                          isDarkMode ? 'text-primary-400' : 'text-green-500'\r\n                        }`} />\r\n                      ) : (\r\n                        <ClipboardIcon className=\"h-5 w-5\" />\r\n                      )}\r\n                    </button>\r\n                  </motion.div>\r\n                ))\r\n              )}\r\n            </div>\r\n          </motion.div>\r\n        </motion.div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NabtebResultChecker;"],"names":["CheckIcon","_ref","svgRef","title","titleId","props","_objectWithoutProperties","_excluded","React","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","ClipboardIcon","NabtebResultChecker","quantity","setQuantity","useState","purchasedCards","setPurchasedCards","isPurchasing","setIsPurchasing","notification","setNotification","visible","message","type","copiedCardId","setCopiedCardId","isDarkMode","useDarkMode","totalAmount","makePayment","walletBalance","useTransactions","cardVariants","hidden","opacity","y","transition","stiffness","_jsx","className","concat","children","_jsxs","motion","div","initial","animate","duration","ease","exit","variants","staggerChildren","value","onChange","e","selectedQuantity","parseInt","target","disabled","map","num","toLocaleString","readOnly","onClick","async","Error","newCards","Array","from","length","generateCard","serial","Math","floor","random","pin","toString","Date","now","date","toLocaleDateString","prev","error","setTimeout","_Fragment","cx","cy","r","clearPurchasedCards","card","x","whileHover","scale","details","navigator","clipboard","writeText","copyCardDetails"],"sourceRoot":""}