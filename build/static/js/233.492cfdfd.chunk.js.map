{"version":3,"file":"static/js/233.492cfdfd.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"],"sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var s = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nexport { _objectWithoutProperties as default };","function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (e.includes(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nexport { _objectWithoutPropertiesLoose as default };","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !globalTapTarget &&\n                        !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Cancelling an animation will write to the DOM. For safety we want to defer\n     * this until the next `update` frame lifecycle. This flag tracks whether we\n     * have a pending cancel, if so we shouldn't allow animations to finish.\n     */\n    let pendingCancel = false;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => {\n        pendingCancel = false;\n        animation.cancel();\n    };\n    const safeCancel = () => {\n        pendingCancel = true;\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        if (pendingCancel)\n            return;\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => {\n            if (pendingCancel)\n                return;\n            animation.finish();\n        },\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n};\n\nexport { MotionGlobalConfig };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false ||\n            MotionGlobalConfig.skipAnimations) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.18.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","function _objectDestructuringEmpty(t) {\n  if (null == t) throw new TypeError(\"Cannot destructure \" + t);\n}\nexport { _objectDestructuringEmpty as default };","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.18.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.18.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","const noop = (any) => any;\n\nexport { noop };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n"],"names":["_objectWithoutProperties","e","t","o","r","i","n","hasOwnProperty","call","includes","Object","getOwnPropertySymbols","s","length","propertyIsEnumerable","LayoutGroupContext","createContext","PresenceContext","Queue","constructor","this","order","scheduled","Set","add","process","has","push","remove","index","indexOf","splice","delete","clear","stepsOrder","schedule","frame","cancel","cancelFrame","state","frameData","steps","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","reduce","acc","key","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","callback","addToCurrentFrame","arguments","undefined","queue","createRenderStep","processStep","stepId","processBatch","performance","now","Math","max","min","forEach","keepAlive","immediate","createRenderBatcher","requestAnimationFrame","noop","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","isRefObject","ref","prototype","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","useIsomorphicLayoutEffect","render","animationState","animateChanges","useEffect","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","concat","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","read","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","invariant","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","warning","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","pendingCancel","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","MotionGlobalConfig","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","isHandoff","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","init","_this","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","transitionOverride","_visualElement$makeTa","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","canSkip","shouldReduceMotion","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","trimmed","resolveCSSVariables","TypeError","_objectDestructuringEmpty","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","_ref12","scrollTo","unitConversion","hasPositionalKey","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","baseConfig","createDomMotionConfig","any","useLayoutEffect"],"sourceRoot":""}